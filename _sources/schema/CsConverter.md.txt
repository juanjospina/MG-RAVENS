# CsConverter

- [1. Property `CsConverter > PowerSystemResource.Location`](#PowerSystemResourceLocation)
- [2. Property `CsConverter > PowerSystemResource.GenericAction`](#PowerSystemResourceGenericAction)
- [3. Property `CsConverter > ConductingEquipment.Terminals`](#ConductingEquipmentTerminals)
  - [3.1. CsConverter > ConductingEquipment.Terminals > Terminal.json](#autogenerated_heading_2)
    - [3.1.1. Property `CsConverter > ConductingEquipment.Terminals > Terminal > ACDCTerminal.connected`](#ConductingEquipmentTerminals_items_ACDCTerminalconnected)
    - [3.1.2. Property `CsConverter > ConductingEquipment.Terminals > Terminal > Terminal.phases`](#ConductingEquipmentTerminals_items_Terminalphases)
    - [3.1.3. Property `CsConverter > ConductingEquipment.Terminals > Terminal > ACDCTerminal.sequenceNumber`](#ConductingEquipmentTerminals_items_ACDCTerminalsequenceNumber)
    - [3.1.4. Property `CsConverter > ConductingEquipment.Terminals > Terminal > IdentifiedObject.description`](#ConductingEquipmentTerminals_items_IdentifiedObjectdescription)
    - [3.1.5. Property `CsConverter > ConductingEquipment.Terminals > Terminal > IdentifiedObject.aliasName`](#ConductingEquipmentTerminals_items_IdentifiedObjectaliasName)
    - [3.1.6. Property `CsConverter > ConductingEquipment.Terminals > Terminal > IdentifiedObject.mRID`](#ConductingEquipmentTerminals_items_IdentifiedObjectmRID)
    - [3.1.7. Property `CsConverter > ConductingEquipment.Terminals > Terminal > IdentifiedObject.name`](#ConductingEquipmentTerminals_items_IdentifiedObjectname)
- [4. Property `CsConverter > ConductingEquipment.BaseVoltage`](#ConductingEquipmentBaseVoltage)
- [5. Property `CsConverter > ConductingEquipment.SvStatus`](#ConductingEquipmentSvStatus)
  - [5.1. CsConverter > ConductingEquipment.SvStatus > SvStatus.json](#autogenerated_heading_3)
    - [5.1.1. Property `CsConverter > ConductingEquipment.SvStatus > SvStatus > SvStatus.inService`](#ConductingEquipmentSvStatus_items_SvStatusinService)
    - [5.1.2. Property `CsConverter > ConductingEquipment.SvStatus > SvStatus > SvStatus.phase`](#ConductingEquipmentSvStatus_items_SvStatusphase)
- [6. Property `CsConverter > CsConverter.alpha`](#CsConverteralpha)
  - [6.1. Property `CsConverter > CsConverter.alpha > multiplier`](#CsConverteralpha_multiplier)
  - [6.2. Property `CsConverter > CsConverter.alpha > unit`](#CsConverteralpha_unit)
  - [6.3. Property `CsConverter > CsConverter.alpha > value`](#CsConverteralpha_value)
- [7. Property `CsConverter > CsConverter.gamma`](#CsConvertergamma)
- [8. Property `CsConverter > CsConverter.maxAlpha`](#CsConvertermaxAlpha)
- [9. Property `CsConverter > CsConverter.maxGamma`](#CsConvertermaxGamma)
- [10. Property `CsConverter > CsConverter.minAlpha`](#CsConverterminAlpha)
- [11. Property `CsConverter > CsConverter.minGamma`](#CsConverterminGamma)
- [12. Property `CsConverter > CsConverter.targetAlpha`](#CsConvertertargetAlpha)
- [13. Property `CsConverter > CsConverter.targetGamma`](#CsConvertertargetGamma)
- [14. Property `CsConverter > CsConverter.targetIdc`](#CsConvertertargetIdc)
  - [14.1. Property `CsConverter > CsConverter.targetIdc > multiplier`](#CsConvertertargetIdc_multiplier)
  - [14.2. Property `CsConverter > CsConverter.targetIdc > unit`](#CsConvertertargetIdc_unit)
  - [14.3. Property `CsConverter > CsConverter.targetIdc > value`](#CsConvertertargetIdc_value)
- [15. Property `CsConverter > CsConverter.minIdc`](#CsConverterminIdc)
- [16. Property `CsConverter > CsConverter.operatingMode`](#CsConverteroperatingMode)
- [17. Property `CsConverter > ACDCConverter.p`](#ACDCConverterp)
  - [17.1. Property `CsConverter > ACDCConverter.p > multiplier`](#ACDCConverterp_multiplier)
  - [17.2. Property `CsConverter > ACDCConverter.p > unit`](#ACDCConverterp_unit)
  - [17.3. Property `CsConverter > ACDCConverter.p > value`](#ACDCConverterp_value)
- [18. Property `CsConverter > ACDCConverter.q`](#ACDCConverterq)
  - [18.1. Property `CsConverter > ACDCConverter.q > multiplier`](#ACDCConverterq_multiplier)
  - [18.2. Property `CsConverter > ACDCConverter.q > unit`](#ACDCConverterq_unit)
  - [18.3. Property `CsConverter > ACDCConverter.q > value`](#ACDCConverterq_value)
- [19. Property `CsConverter > IdentifiedObject.description`](#IdentifiedObjectdescription)
- [20. Property `CsConverter > ACDCConverter.minP`](#ACDCConverterminP)
- [21. Property `CsConverter > Equipment.aggregate`](#Equipmentaggregate)
- [22. Property `CsConverter > Equipment.networkAnalysisEnabled`](#EquipmentnetworkAnalysisEnabled)
- [23. Property `CsConverter > Equipment.normallyInService`](#EquipmentnormallyInService)
- [24. Property `CsConverter > IdentifiedObject.mRID`](#IdentifiedObjectmRID)
- [25. Property `CsConverter > ACDCConverter.baseS`](#ACDCConverterbaseS)
  - [25.1. Property `CsConverter > ACDCConverter.baseS > multiplier`](#ACDCConverterbaseS_multiplier)
  - [25.2. Property `CsConverter > ACDCConverter.baseS > unit`](#ACDCConverterbaseS_unit)
  - [25.3. Property `CsConverter > ACDCConverter.baseS > value`](#ACDCConverterbaseS_value)
- [26. Property `CsConverter > ACDCConverter.switchingLoss`](#ACDCConverterswitchingLoss)
  - [26.1. Property `CsConverter > ACDCConverter.switchingLoss > multiplier`](#ACDCConverterswitchingLoss_multiplier)
  - [26.2. Property `CsConverter > ACDCConverter.switchingLoss > unit`](#ACDCConverterswitchingLoss_unit)
  - [26.3. Property `CsConverter > ACDCConverter.switchingLoss > value`](#ACDCConverterswitchingLoss_value)
- [27. Property `CsConverter > Equipment.inService`](#EquipmentinService)
- [28. Property `CsConverter > ACDCConverter.targetPpcc`](#ACDCConvertertargetPpcc)
- [29. Property `CsConverter > ACDCConverter.targetUdc`](#ACDCConvertertargetUdc)
  - [29.1. Property `CsConverter > ACDCConverter.targetUdc > multiplier`](#ACDCConvertertargetUdc_multiplier)
  - [29.2. Property `CsConverter > ACDCConverter.targetUdc > unit`](#ACDCConvertertargetUdc_unit)
  - [29.3. Property `CsConverter > ACDCConverter.targetUdc > value`](#ACDCConvertertargetUdc_value)
- [30. Property `CsConverter > ACDCConverter.valveU0`](#ACDCConvertervalveU0)
- [31. Property `CsConverter > ACDCConverter.numberOfValves`](#ACDCConverternumberOfValves)
- [32. Property `CsConverter > ACDCConverter.idc`](#ACDCConverteridc)
- [33. Property `CsConverter > ACDCConverter.idleLoss`](#ACDCConverteridleLoss)
- [34. Property `CsConverter > CsConverter.maxIdc`](#CsConvertermaxIdc)
- [35. Property `CsConverter > ACDCConverter.maxUdc`](#ACDCConvertermaxUdc)
- [36. Property `CsConverter > ACDCConverter.minUdc`](#ACDCConverterminUdc)
- [37. Property `CsConverter > ACDCConverter.poleLossP`](#ACDCConverterpoleLossP)
- [38. Property `CsConverter > CsConverter.ratedIdc`](#CsConverterratedIdc)
- [39. Property `CsConverter > ACDCConverter.ratedUdc`](#ACDCConverterratedUdc)
- [40. Property `CsConverter > ACDCConverter.resistiveLoss`](#ACDCConverterresistiveLoss)
  - [40.1. Property `CsConverter > ACDCConverter.resistiveLoss > multiplier`](#ACDCConverterresistiveLoss_multiplier)
  - [40.2. Property `CsConverter > ACDCConverter.resistiveLoss > unit`](#ACDCConverterresistiveLoss_unit)
  - [40.3. Property `CsConverter > ACDCConverter.resistiveLoss > value`](#ACDCConverterresistiveLoss_value)
- [41. Property `CsConverter > ACDCConverter.maxP`](#ACDCConvertermaxP)
- [42. Property `CsConverter > ACDCConverter.uc`](#ACDCConverteruc)
- [43. Property `CsConverter > ACDCConverter.udc`](#ACDCConverterudc)
- [44. Property `CsConverter > IdentifiedObject.aliasName`](#IdentifiedObjectaliasName)
- [45. Property `CsConverter > CsConverter.pPccControl`](#CsConverterpPccControl)
- [46. Property `CsConverter > IdentifiedObject.name`](#IdentifiedObjectname)

**Title:** CsConverter

|                           |                                                                           |
| ------------------------- | ------------------------------------------------------------------------- |
| **Type**                  | `object`                                                                  |
| **Required**              | No                                                                        |
| **Additional properties** | [[Any type: allowed]](# "Additional Properties of any type are allowed.") |

**Description:** DC side of the current source converter (CSC).
The firing angle controls the dc voltage at the converter, both for rectifier and inverter. The difference between the dc voltages of the rectifier and inverter determines the dc current. The extinction angle is used to limit the dc voltage at the inverter, if needed, and is not used in active power control. The firing angle, transformer tap position and number of connected filters are the primary means to control a current source dc line. Higher level controls are built on top, e.g. dc voltage, dc current and active power. From a steady state perspective it is sufficient to specify the wanted active power transfer (ACDCConverter.targetPpcc) and the control functions will set the dc voltage, dc current, firing angle, transformer tap position and number of connected filters to meet this. Therefore attributes targetAlpha and targetGamma are not applicable in this case.
The reactive power consumed by the converter is a function of the firing angle, transformer tap position and number of connected filter, which can be approximated with half of the active power. The losses is a function of the dc voltage and dc current.
The attributes minAlpha and maxAlpha define the range of firing angles for rectifier operation between which no discrete tap changer action takes place. The range is typically 10-18 degrees.
The attributes minGamma and maxGamma define the range of extinction angles for inverter operation between which no discrete tap changer action takes place. The range is typically 17-20 degrees.

| Property                                                                  | Pattern | Type             | Deprecated | Definition                                                  | Title/Description      |
| ------------------------------------------------------------------------- | ------- | ---------------- | ---------- | ----------------------------------------------------------- | ---------------------- |
| - [PowerSystemResource.Location](#PowerSystemResourceLocation )           | No      | string           | No         | -                                                           | -                      |
| - [PowerSystemResource.GenericAction](#PowerSystemResourceGenericAction ) | No      | string           | No         | -                                                           | -                      |
| - [ConductingEquipment.Terminals](#ConductingEquipmentTerminals )         | No      | array            | No         | -                                                           | Terminal               |
| - [ConductingEquipment.BaseVoltage](#ConductingEquipmentBaseVoltage )     | No      | string           | No         | -                                                           | -                      |
| - [ConductingEquipment.SvStatus](#ConductingEquipmentSvStatus )           | No      | array            | No         | -                                                           | SvStatus               |
| - [CsConverter.alpha](#CsConverteralpha )                                 | No      | object or number | No         | In ./AngleDegrees.json                                      | alpha                  |
| - [CsConverter.gamma](#CsConvertergamma )                                 | No      | object or number | No         | Same as [CsConverter.alpha](#CsConverteralpha )             | gamma                  |
| - [CsConverter.maxAlpha](#CsConvertermaxAlpha )                           | No      | object or number | No         | Same as [CsConverter.alpha](#CsConverteralpha )             | maxAlpha               |
| - [CsConverter.maxGamma](#CsConvertermaxGamma )                           | No      | object or number | No         | Same as [CsConverter.alpha](#CsConverteralpha )             | maxGamma               |
| - [CsConverter.minAlpha](#CsConverterminAlpha )                           | No      | object or number | No         | Same as [CsConverter.alpha](#CsConverteralpha )             | minAlpha               |
| - [CsConverter.minGamma](#CsConverterminGamma )                           | No      | object or number | No         | Same as [CsConverter.alpha](#CsConverteralpha )             | minGamma               |
| - [CsConverter.targetAlpha](#CsConvertertargetAlpha )                     | No      | object or number | No         | Same as [CsConverter.alpha](#CsConverteralpha )             | targetAlpha            |
| - [CsConverter.targetGamma](#CsConvertertargetGamma )                     | No      | object or number | No         | Same as [CsConverter.alpha](#CsConverteralpha )             | targetGamma            |
| - [CsConverter.targetIdc](#CsConvertertargetIdc )                         | No      | object or number | No         | In ./CurrentFlow.json                                       | targetIdc              |
| - [CsConverter.minIdc](#CsConverterminIdc )                               | No      | object or number | No         | Same as [CsConverter.targetIdc](#CsConvertertargetIdc )     | minIdc                 |
| - [CsConverter.operatingMode](#CsConverteroperatingMode )                 | No      | enum (of string) | No         | In ./CsOperatingModeKind.json                               | operatingMode          |
| - [ACDCConverter.p](#ACDCConverterp )                                     | No      | object or number | No         | In ./ActivePower.json                                       | p                      |
| - [ACDCConverter.q](#ACDCConverterq )                                     | No      | object or number | No         | In ./ReactivePower.json                                     | q                      |
| - [IdentifiedObject.description](#IdentifiedObjectdescription )           | No      | string           | No         | -                                                           | description            |
| - [ACDCConverter.minP](#ACDCConverterminP )                               | No      | object or number | No         | Same as [ACDCConverter.p](#ACDCConverterp )                 | minP                   |
| - [Equipment.aggregate](#Equipmentaggregate )                             | No      | boolean          | No         | -                                                           | aggregate              |
| - [Equipment.networkAnalysisEnabled](#EquipmentnetworkAnalysisEnabled )   | No      | boolean          | No         | -                                                           | networkAnalysisEnabled |
| - [Equipment.normallyInService](#EquipmentnormallyInService )             | No      | boolean          | No         | -                                                           | normallyInService      |
| - [IdentifiedObject.mRID](#IdentifiedObjectmRID )                         | No      | string           | No         | -                                                           | mRID                   |
| - [ACDCConverter.baseS](#ACDCConverterbaseS )                             | No      | object or number | No         | In ./ApparentPower.json                                     | baseS                  |
| - [ACDCConverter.switchingLoss](#ACDCConverterswitchingLoss )             | No      | object or number | No         | In ./ActivePowerPerCurrentFlow.json                         | switchingLoss          |
| - [Equipment.inService](#EquipmentinService )                             | No      | boolean          | No         | -                                                           | inService              |
| - [ACDCConverter.targetPpcc](#ACDCConvertertargetPpcc )                   | No      | object or number | No         | Same as [ACDCConverter.p](#ACDCConverterp )                 | targetPpcc             |
| - [ACDCConverter.targetUdc](#ACDCConvertertargetUdc )                     | No      | object or number | No         | In ./Voltage.json                                           | targetUdc              |
| - [ACDCConverter.valveU0](#ACDCConvertervalveU0 )                         | No      | object or number | No         | Same as [ACDCConverter.targetUdc](#ACDCConvertertargetUdc ) | valveU0                |
| - [ACDCConverter.numberOfValves](#ACDCConverternumberOfValves )           | No      | integer          | No         | -                                                           | numberOfValves         |
| - [ACDCConverter.idc](#ACDCConverteridc )                                 | No      | object or number | No         | Same as [CsConverter.targetIdc](#CsConvertertargetIdc )     | idc                    |
| - [ACDCConverter.idleLoss](#ACDCConverteridleLoss )                       | No      | object or number | No         | Same as [ACDCConverter.p](#ACDCConverterp )                 | idleLoss               |
| - [CsConverter.maxIdc](#CsConvertermaxIdc )                               | No      | object or number | No         | Same as [CsConverter.targetIdc](#CsConvertertargetIdc )     | maxIdc                 |
| - [ACDCConverter.maxUdc](#ACDCConvertermaxUdc )                           | No      | object or number | No         | Same as [ACDCConverter.targetUdc](#ACDCConvertertargetUdc ) | maxUdc                 |
| - [ACDCConverter.minUdc](#ACDCConverterminUdc )                           | No      | object or number | No         | Same as [ACDCConverter.targetUdc](#ACDCConvertertargetUdc ) | minUdc                 |
| - [ACDCConverter.poleLossP](#ACDCConverterpoleLossP )                     | No      | object or number | No         | Same as [ACDCConverter.p](#ACDCConverterp )                 | poleLossP              |
| - [CsConverter.ratedIdc](#CsConverterratedIdc )                           | No      | object or number | No         | Same as [CsConverter.targetIdc](#CsConvertertargetIdc )     | ratedIdc               |
| - [ACDCConverter.ratedUdc](#ACDCConverterratedUdc )                       | No      | object or number | No         | Same as [ACDCConverter.targetUdc](#ACDCConvertertargetUdc ) | ratedUdc               |
| - [ACDCConverter.resistiveLoss](#ACDCConverterresistiveLoss )             | No      | object or number | No         | In ./Resistance.json                                        | resistiveLoss          |
| - [ACDCConverter.maxP](#ACDCConvertermaxP )                               | No      | object or number | No         | Same as [ACDCConverter.p](#ACDCConverterp )                 | maxP                   |
| - [ACDCConverter.uc](#ACDCConverteruc )                                   | No      | object or number | No         | Same as [ACDCConverter.targetUdc](#ACDCConvertertargetUdc ) | uc                     |
| - [ACDCConverter.udc](#ACDCConverterudc )                                 | No      | object or number | No         | Same as [ACDCConverter.targetUdc](#ACDCConvertertargetUdc ) | udc                    |
| - [IdentifiedObject.aliasName](#IdentifiedObjectaliasName )               | No      | string           | No         | -                                                           | aliasName              |
| - [CsConverter.pPccControl](#CsConverterpPccControl )                     | No      | enum (of string) | No         | In ./CsPpccControlKind.json                                 | pPccControl            |
| - [IdentifiedObject.name](#IdentifiedObjectname )                         | No      | string           | No         | -                                                           | name                   |

## <a name="PowerSystemResourceLocation"></a>1. Property `CsConverter > PowerSystemResource.Location`

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

## <a name="PowerSystemResourceGenericAction"></a>2. Property `CsConverter > PowerSystemResource.GenericAction`

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

## <a name="ConductingEquipmentTerminals"></a>3. Property `CsConverter > ConductingEquipment.Terminals`

**Title:** Terminal

|              |         |
| ------------ | ------- |
| **Type**     | `array` |
| **Required** | No      |

**Description:** An AC electrical connection point to a piece of conducting equipment. Terminals are connected at physical connection points called connectivity nodes.

|                      | Array restrictions |
| -------------------- | ------------------ |
| **Min items**        | N/A                |
| **Max items**        | N/A                |
| **Items unicity**    | False              |
| **Additional items** | False              |
| **Tuple validation** | See below          |

| Each item of this array must be                      | Description                                                                                                                                            |
| ---------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------ |
| [Terminal.json](#ConductingEquipmentTerminals_items) | An AC electrical connection point to a piece of conducting equipment. Terminals are connected at physical connection points called connectivity nodes. |

### <a name="autogenerated_heading_2"></a>3.1. CsConverter > ConductingEquipment.Terminals > Terminal.json

|                           |                                                                           |
| ------------------------- | ------------------------------------------------------------------------- |
| **Type**                  | `object`                                                                  |
| **Required**              | No                                                                        |
| **Additional properties** | [[Any type: allowed]](# "Additional Properties of any type are allowed.") |
| **Defined in**            | ./Terminal.json                                                           |

**Description:** An AC electrical connection point to a piece of conducting equipment. Terminals are connected at physical connection points called connectivity nodes.

| Property                                                                                           | Pattern | Type             | Deprecated | Definition          | Title/Description |
| -------------------------------------------------------------------------------------------------- | ------- | ---------------- | ---------- | ------------------- | ----------------- |
| - [ACDCTerminal.connected](#ConductingEquipmentTerminals_items_ACDCTerminalconnected )             | No      | boolean          | No         | -                   | connected         |
| - [Terminal.phases](#ConductingEquipmentTerminals_items_Terminalphases )                           | No      | enum (of string) | No         | In ./PhaseCode.json | phases            |
| - [ACDCTerminal.sequenceNumber](#ConductingEquipmentTerminals_items_ACDCTerminalsequenceNumber )   | No      | integer          | No         | -                   | sequenceNumber    |
| - [IdentifiedObject.description](#ConductingEquipmentTerminals_items_IdentifiedObjectdescription ) | No      | string           | No         | -                   | description       |
| - [IdentifiedObject.aliasName](#ConductingEquipmentTerminals_items_IdentifiedObjectaliasName )     | No      | string           | No         | -                   | aliasName         |
| - [IdentifiedObject.mRID](#ConductingEquipmentTerminals_items_IdentifiedObjectmRID )               | No      | string           | No         | -                   | mRID              |
| - [IdentifiedObject.name](#ConductingEquipmentTerminals_items_IdentifiedObjectname )               | No      | string           | No         | -                   | name              |

#### <a name="ConductingEquipmentTerminals_items_ACDCTerminalconnected"></a>3.1.1. Property `CsConverter > ConductingEquipment.Terminals > Terminal > ACDCTerminal.connected`

**Title:** connected

|              |           |
| ------------ | --------- |
| **Type**     | `boolean` |
| **Required** | No        |

**Description:** The connected status is related to a bus-branch model and the topological node to terminal relation.  True implies the terminal is connected to the related topological node and false implies it is not. 
In a bus-branch model, the connected status is used to tell if equipment is disconnected without having to change the connectivity described by the topological node to terminal relation. A valid case is that conducting equipment can be connected in one end and open in the other. In particular for an AC line segment, where the reactive line charging can be significant, this is a relevant case.

#### <a name="ConductingEquipmentTerminals_items_Terminalphases"></a>3.1.2. Property `CsConverter > ConductingEquipment.Terminals > Terminal > Terminal.phases`

**Title:** phases

|                |                    |
| -------------- | ------------------ |
| **Type**       | `enum (of string)` |
| **Required**   | No                 |
| **Defined in** | ./PhaseCode.json   |

**Description:** Represents the normal network phasing condition. If the attribute is missing, three phases (ABC) shall be assumed, except for terminals of grounding classes (specializations of EarthFaultCompensator, GroundDisconnector, and Ground) which will be assumed to be N. Therefore, phase code ABCN is explicitly declared when needed, e.g. for star point grounding equipment.
The phase code on terminals connecting same ConnectivityNode or same TopologicalNode as well as for equipment between two terminals shall be consistent.

Must be one of:
* "ABCN"
* "ABC"
* "ABN"
* "ACN"
* "BCN"
* "AB"
* "AC"
* "BC"
* "AN"
* "BN"
* "CN"
* "A"
* "B"
* "C"
* "N"
* "s1N"
* "s2N"
* "s12N"
* "s1"
* "s2"
* "s12"
* "none"
* "X"
* "XY"
* "XN"
* "XYN"

#### <a name="ConductingEquipmentTerminals_items_ACDCTerminalsequenceNumber"></a>3.1.3. Property `CsConverter > ConductingEquipment.Terminals > Terminal > ACDCTerminal.sequenceNumber`

**Title:** sequenceNumber

|              |           |
| ------------ | --------- |
| **Type**     | `integer` |
| **Required** | No        |

**Description:** The orientation of the terminal connections for a multiple terminal conducting equipment.  The sequence numbering starts with 1 and additional terminals should follow in increasing order.   The first terminal is the "starting point" for a two terminal branch.

#### <a name="ConductingEquipmentTerminals_items_IdentifiedObjectdescription"></a>3.1.4. Property `CsConverter > ConductingEquipment.Terminals > Terminal > IdentifiedObject.description`

**Title:** description

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The description is a free human readable text describing or naming the object. It may be non unique and may not correlate to a naming hierarchy.

#### <a name="ConductingEquipmentTerminals_items_IdentifiedObjectaliasName"></a>3.1.5. Property `CsConverter > ConductingEquipment.Terminals > Terminal > IdentifiedObject.aliasName`

**Title:** aliasName

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The aliasName is free text human readable name of the object alternative to IdentifiedObject.name. It may be non unique and may not correlate to a naming hierarchy.
The attribute aliasName is retained because of backwards compatibility between CIM relases. It is however recommended to replace aliasName with the Name class as aliasName is planned for retirement at a future time.

#### <a name="ConductingEquipmentTerminals_items_IdentifiedObjectmRID"></a>3.1.6. Property `CsConverter > ConductingEquipment.Terminals > Terminal > IdentifiedObject.mRID`

**Title:** mRID

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** Master resource identifier issued by a model authority. The mRID is unique within an exchange context. Global uniqueness is easily achieved by using a UUID, as specified in RFC 4122, for the mRID. The use of UUID is strongly recommended.
For CIMXML data files in RDF syntax conforming to IEC 61970-552, the mRID is mapped to rdf:ID or rdf:about attributes that identify CIM object elements.

#### <a name="ConductingEquipmentTerminals_items_IdentifiedObjectname"></a>3.1.7. Property `CsConverter > ConductingEquipment.Terminals > Terminal > IdentifiedObject.name`

**Title:** name

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The name is any free human readable and possibly non unique text naming the object.

## <a name="ConductingEquipmentBaseVoltage"></a>4. Property `CsConverter > ConductingEquipment.BaseVoltage`

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

## <a name="ConductingEquipmentSvStatus"></a>5. Property `CsConverter > ConductingEquipment.SvStatus`

**Title:** SvStatus

|              |         |
| ------------ | ------- |
| **Type**     | `array` |
| **Required** | No      |

**Description:** State variable for status.

|                      | Array restrictions |
| -------------------- | ------------------ |
| **Min items**        | N/A                |
| **Max items**        | N/A                |
| **Items unicity**    | False              |
| **Additional items** | False              |
| **Tuple validation** | See below          |

| Each item of this array must be                     | Description                |
| --------------------------------------------------- | -------------------------- |
| [SvStatus.json](#ConductingEquipmentSvStatus_items) | State variable for status. |

### <a name="autogenerated_heading_3"></a>5.1. CsConverter > ConductingEquipment.SvStatus > SvStatus.json

|                           |                                                                           |
| ------------------------- | ------------------------------------------------------------------------- |
| **Type**                  | `object`                                                                  |
| **Required**              | No                                                                        |
| **Additional properties** | [[Any type: allowed]](# "Additional Properties of any type are allowed.") |
| **Defined in**            | ./SvStatus.json                                                           |

**Description:** State variable for status.

| Property                                                                      | Pattern | Type             | Deprecated | Definition                | Title/Description |
| ----------------------------------------------------------------------------- | ------- | ---------------- | ---------- | ------------------------- | ----------------- |
| - [SvStatus.inService](#ConductingEquipmentSvStatus_items_SvStatusinService ) | No      | boolean          | No         | -                         | inService         |
| - [SvStatus.phase](#ConductingEquipmentSvStatus_items_SvStatusphase )         | No      | enum (of string) | No         | In ./SinglePhaseKind.json | phase             |

#### <a name="ConductingEquipmentSvStatus_items_SvStatusinService"></a>5.1.1. Property `CsConverter > ConductingEquipment.SvStatus > SvStatus > SvStatus.inService`

**Title:** inService

|              |           |
| ------------ | --------- |
| **Type**     | `boolean` |
| **Required** | No        |

**Description:** The in service status as a result of topology processing.  It indicates if the equipment is considered as energized by the power flow. It reflects if the equipment is connected within a solvable island.  It does not necessarily reflect whether or not the island was solved by the power flow.

#### <a name="ConductingEquipmentSvStatus_items_SvStatusphase"></a>5.1.2. Property `CsConverter > ConductingEquipment.SvStatus > SvStatus > SvStatus.phase`

**Title:** phase

|                |                        |
| -------------- | ---------------------- |
| **Type**       | `enum (of string)`     |
| **Required**   | No                     |
| **Defined in** | ./SinglePhaseKind.json |

**Description:** The individual phase status.    If the attribute is unspecified, then three phase model is assumed.

Must be one of:
* "A"
* "B"
* "C"
* "N"
* "s1"
* "s2"

## <a name="CsConverteralpha"></a>6. Property `CsConverter > CsConverter.alpha`

**Title:** alpha

|                |                     |
| -------------- | ------------------- |
| **Type**       | `object or number`  |
| **Required**   | No                  |
| **Defined in** | ./AngleDegrees.json |

**Description:** Firing angle that determines the dc voltage at the converter dc terminal. Typical value between 10 degrees and 18 degrees for a rectifier. It is converter’s state variable, result from power flow. The attribute shall be a positive value.

| Property                                      | Pattern | Type             | Deprecated | Definition               | Title/Description |
| --------------------------------------------- | ------- | ---------------- | ---------- | ------------------------ | ----------------- |
| - [multiplier](#CsConverteralpha_multiplier ) | No      | enum (of string) | No         | In ./UnitMultiplier.json | nan               |
| - [unit](#CsConverteralpha_unit )             | No      | enum (of string) | No         | In ./UnitSymbol.json     | nan               |
| - [value](#CsConverteralpha_value )           | No      | number           | No         | -                        | nan               |

### <a name="CsConverteralpha_multiplier"></a>6.1. Property `CsConverter > CsConverter.alpha > multiplier`

|                |                       |
| -------------- | --------------------- |
| **Type**       | `enum (of string)`    |
| **Required**   | No                    |
| **Default**    | `"none"`              |
| **Defined in** | ./UnitMultiplier.json |

**Description:** nan

Must be one of:
* "p"
* "n"
* "micro"
* "m"
* "c"
* "d"
* "k"
* "M"
* "G"
* "T"
* "none"
* "y"
* "z"
* "a"
* "f"
* "da"
* "h"
* "P"
* "E"
* "Z"
* "Y"

### <a name="CsConverteralpha_unit"></a>6.2. Property `CsConverter > CsConverter.alpha > unit`

|                |                    |
| -------------- | ------------------ |
| **Type**       | `enum (of string)` |
| **Required**   | No                 |
| **Default**    | `"deg"`            |
| **Defined in** | ./UnitSymbol.json  |

**Description:** nan

Must be one of:
* "none"
* "m"
* "kg"
* "s"
* "A"
* "K"
* "mol"
* "cd"
* "deg"
* "rad"
* "sr"
* "Gy"
* "Bq"
* "degC"
* "Sv"
* "F"
* "C"
* "S"
* "H"
* "V"
* "ohm"
* "J"
* "N"
* "Hz"
* "lx"
* "lm"
* "Wb"
* "T"
* "W"
* "Pa"
* "m2"
* "m3"
* "mPers"
* "mPers2"
* "m3Pers"
* "mPerm3"
* "kgm"
* "kgPerm3"
* "WPermK"
* "JPerK"
* "ppm"
* "rotPers"
* "radPers"
* "VA"
* "VAr"
* "cosPhi"
* "Vs"
* "V2"
* "As"
* "A2"
* "A2s"
* "VAh"
* "Wh"
* "VArh"
* "VPerHz"
* "HzPers"
* "character"
* "charPers"
* "kgm2"
* "dB"
* "WPers"
* "lPers"
* "dBm"
* "h"
* "min"
* "Q"
* "Qh"
* "ohmm"
* "APerm"
* "V2h"
* "A2h"
* "Ah"
* "count"
* "ft3"
* "m3Perh"
* "gal"
* "Btu"
* "l"
* "lPerh"
* "lPerl"
* "gPerg"
* "molPerm3"
* "molPermol"
* "molPerkg"
* "sPers"
* "HzPerHz"
* "VPerV"
* "APerA"
* "VPerVA"
* "rev"
* "kat"
* "JPerkg"
* "m3Uncompensated"
* "m3Compensated"
* "WPerW"
* "therm"
* "onePerm"
* "m3Perkg"
* "Pas"
* "Nm"
* "NPerm"
* "radPers2"
* "WPerm2"
* "JPerkgK"
* "JPerm3"
* "VPerm"
* "CPerm3"
* "CPerm2"
* "FPerm"
* "HPerm"
* "JPermol"
* "JPermolK"
* "CPerkg"
* "GyPers"
* "WPersr"
* "WPerm2sr"
* "katPerm3"
* "d"
* "anglemin"
* "anglesec"
* "ha"
* "tonne"
* "bar"
* "mmHg"
* "M"
* "kn"
* "Vh"
* "Mx"
* "G"
* "Oe"
* "WPerA"
* "SPerm"
* "onePerHz"
* "VPerVAr"
* "ohmPerm"
* "kgPerJ"
* "JPers"
* "m2Pers"
* "JPerm2"
* "KPers"
* "PaPers"

### <a name="CsConverteralpha_value"></a>6.3. Property `CsConverter > CsConverter.alpha > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="CsConvertergamma"></a>7. Property `CsConverter > CsConverter.gamma`

**Title:** gamma

|                        |                                        |
| ---------------------- | -------------------------------------- |
| **Type**               | `object or number`                     |
| **Required**           | No                                     |
| **Same definition as** | [CsConverter.alpha](#CsConverteralpha) |

**Description:** Extinction angle. It is used to limit the dc voltage at the inverter if needed. Typical value between 17 degrees and 20 degrees for an inverter. It is converter’s state variable, result from power flow. The attribute shall be a positive value.

## <a name="CsConvertermaxAlpha"></a>8. Property `CsConverter > CsConverter.maxAlpha`

**Title:** maxAlpha

|                        |                                        |
| ---------------------- | -------------------------------------- |
| **Type**               | `object or number`                     |
| **Required**           | No                                     |
| **Same definition as** | [CsConverter.alpha](#CsConverteralpha) |

**Description:** Maximum firing angle. It is converter’s configuration data used in power flow. The attribute shall be a positive value.

## <a name="CsConvertermaxGamma"></a>9. Property `CsConverter > CsConverter.maxGamma`

**Title:** maxGamma

|                        |                                        |
| ---------------------- | -------------------------------------- |
| **Type**               | `object or number`                     |
| **Required**           | No                                     |
| **Same definition as** | [CsConverter.alpha](#CsConverteralpha) |

**Description:** Maximum extinction angle. It is converter’s configuration data used in power flow. The attribute shall be a positive value.

## <a name="CsConverterminAlpha"></a>10. Property `CsConverter > CsConverter.minAlpha`

**Title:** minAlpha

|                        |                                        |
| ---------------------- | -------------------------------------- |
| **Type**               | `object or number`                     |
| **Required**           | No                                     |
| **Same definition as** | [CsConverter.alpha](#CsConverteralpha) |

**Description:** Minimum firing angle. It is converter’s configuration data used in power flow. The attribute shall be a positive value.

## <a name="CsConverterminGamma"></a>11. Property `CsConverter > CsConverter.minGamma`

**Title:** minGamma

|                        |                                        |
| ---------------------- | -------------------------------------- |
| **Type**               | `object or number`                     |
| **Required**           | No                                     |
| **Same definition as** | [CsConverter.alpha](#CsConverteralpha) |

**Description:** Minimum extinction angle. It is converter’s configuration data used in power flow. The attribute shall be a positive value.

## <a name="CsConvertertargetAlpha"></a>12. Property `CsConverter > CsConverter.targetAlpha`

**Title:** targetAlpha

|                        |                                        |
| ---------------------- | -------------------------------------- |
| **Type**               | `object or number`                     |
| **Required**           | No                                     |
| **Same definition as** | [CsConverter.alpha](#CsConverteralpha) |

**Description:** Target firing angle. It is converter’s control variable used in power flow. It is only applicable for rectifier if continuous tap changer control is used. Allowed values are within the range minAlpha<=targetAlpha<=maxAlpha. The attribute shall be a positive value.

## <a name="CsConvertertargetGamma"></a>13. Property `CsConverter > CsConverter.targetGamma`

**Title:** targetGamma

|                        |                                        |
| ---------------------- | -------------------------------------- |
| **Type**               | `object or number`                     |
| **Required**           | No                                     |
| **Same definition as** | [CsConverter.alpha](#CsConverteralpha) |

**Description:** Target extinction angle. It is converter’s control variable used in power flow. It is only applicable for inverter if continuous tap changer control is used. Allowed values are within the range minGamma<=targetGamma<=maxGamma. The attribute shall be a positive value.

## <a name="CsConvertertargetIdc"></a>14. Property `CsConverter > CsConverter.targetIdc`

**Title:** targetIdc

|                |                    |
| -------------- | ------------------ |
| **Type**       | `object or number` |
| **Required**   | No                 |
| **Defined in** | ./CurrentFlow.json |

**Description:** DC current target value. It is converter’s control variable used in power flow. The attribute shall be a positive value.

| Property                                          | Pattern | Type             | Deprecated | Definition                                          | Title/Description |
| ------------------------------------------------- | ------- | ---------------- | ---------- | --------------------------------------------------- | ----------------- |
| - [multiplier](#CsConvertertargetIdc_multiplier ) | No      | enum (of string) | No         | Same as [multiplier](#CsConverteralpha_multiplier ) | nan               |
| - [unit](#CsConvertertargetIdc_unit )             | No      | enum (of string) | No         | Same as [unit](#CsConverteralpha_unit )             | nan               |
| - [value](#CsConvertertargetIdc_value )           | No      | number           | No         | -                                                   | nan               |

### <a name="CsConvertertargetIdc_multiplier"></a>14.1. Property `CsConverter > CsConverter.targetIdc > multiplier`

|                        |                                            |
| ---------------------- | ------------------------------------------ |
| **Type**               | `enum (of string)`                         |
| **Required**           | No                                         |
| **Default**            | `"none"`                                   |
| **Same definition as** | [multiplier](#CsConverteralpha_multiplier) |

**Description:** nan

### <a name="CsConvertertargetIdc_unit"></a>14.2. Property `CsConverter > CsConverter.targetIdc > unit`

|                        |                                |
| ---------------------- | ------------------------------ |
| **Type**               | `enum (of string)`             |
| **Required**           | No                             |
| **Default**            | `"A"`                          |
| **Same definition as** | [unit](#CsConverteralpha_unit) |

**Description:** nan

### <a name="CsConvertertargetIdc_value"></a>14.3. Property `CsConverter > CsConverter.targetIdc > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="CsConverterminIdc"></a>15. Property `CsConverter > CsConverter.minIdc`

**Title:** minIdc

|                        |                                                |
| ---------------------- | ---------------------------------------------- |
| **Type**               | `object or number`                             |
| **Required**           | No                                             |
| **Same definition as** | [CsConverter.targetIdc](#CsConvertertargetIdc) |

**Description:** The minimum direct current (Id) on the DC side at which the converter should operate. It is converter’s configuration data used in power flow. The attribute shall be a positive value.

## <a name="CsConverteroperatingMode"></a>16. Property `CsConverter > CsConverter.operatingMode`

**Title:** operatingMode

|                |                            |
| -------------- | -------------------------- |
| **Type**       | `enum (of string)`         |
| **Required**   | No                         |
| **Defined in** | ./CsOperatingModeKind.json |

**Description:** Indicates whether the DC pole is operating as an inverter or as a rectifier. It is converter’s control variable used in power flow.

Must be one of:
* "inverter"
* "rectifier"

## <a name="ACDCConverterp"></a>17. Property `CsConverter > ACDCConverter.p`

**Title:** p

|                |                    |
| -------------- | ------------------ |
| **Type**       | `object or number` |
| **Required**   | No                 |
| **Defined in** | ./ActivePower.json |

**Description:** Active power at the point of common coupling. Load sign convention is used, i.e. positive sign means flow out from a node.
Starting value for a steady state solution in the case a simplified power flow model is used.

| Property                                    | Pattern | Type             | Deprecated | Definition                                          | Title/Description |
| ------------------------------------------- | ------- | ---------------- | ---------- | --------------------------------------------------- | ----------------- |
| - [multiplier](#ACDCConverterp_multiplier ) | No      | enum (of string) | No         | Same as [multiplier](#CsConverteralpha_multiplier ) | nan               |
| - [unit](#ACDCConverterp_unit )             | No      | enum (of string) | No         | Same as [unit](#CsConverteralpha_unit )             | nan               |
| - [value](#ACDCConverterp_value )           | No      | number           | No         | -                                                   | nan               |

### <a name="ACDCConverterp_multiplier"></a>17.1. Property `CsConverter > ACDCConverter.p > multiplier`

|                        |                                            |
| ---------------------- | ------------------------------------------ |
| **Type**               | `enum (of string)`                         |
| **Required**           | No                                         |
| **Default**            | `"none"`                                   |
| **Same definition as** | [multiplier](#CsConverteralpha_multiplier) |

**Description:** nan

### <a name="ACDCConverterp_unit"></a>17.2. Property `CsConverter > ACDCConverter.p > unit`

|                        |                                |
| ---------------------- | ------------------------------ |
| **Type**               | `enum (of string)`             |
| **Required**           | No                             |
| **Default**            | `"W"`                          |
| **Same definition as** | [unit](#CsConverteralpha_unit) |

**Description:** nan

### <a name="ACDCConverterp_value"></a>17.3. Property `CsConverter > ACDCConverter.p > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="ACDCConverterq"></a>18. Property `CsConverter > ACDCConverter.q`

**Title:** q

|                |                      |
| -------------- | -------------------- |
| **Type**       | `object or number`   |
| **Required**   | No                   |
| **Defined in** | ./ReactivePower.json |

**Description:** Reactive power at the point of common coupling. Load sign convention is used, i.e. positive sign means flow out from a node.
Starting value for a steady state solution in the case a simplified power flow model is used.

| Property                                    | Pattern | Type             | Deprecated | Definition                                          | Title/Description |
| ------------------------------------------- | ------- | ---------------- | ---------- | --------------------------------------------------- | ----------------- |
| - [multiplier](#ACDCConverterq_multiplier ) | No      | enum (of string) | No         | Same as [multiplier](#CsConverteralpha_multiplier ) | nan               |
| - [unit](#ACDCConverterq_unit )             | No      | enum (of string) | No         | Same as [unit](#CsConverteralpha_unit )             | nan               |
| - [value](#ACDCConverterq_value )           | No      | number           | No         | -                                                   | nan               |

### <a name="ACDCConverterq_multiplier"></a>18.1. Property `CsConverter > ACDCConverter.q > multiplier`

|                        |                                            |
| ---------------------- | ------------------------------------------ |
| **Type**               | `enum (of string)`                         |
| **Required**           | No                                         |
| **Default**            | `"none"`                                   |
| **Same definition as** | [multiplier](#CsConverteralpha_multiplier) |

**Description:** nan

### <a name="ACDCConverterq_unit"></a>18.2. Property `CsConverter > ACDCConverter.q > unit`

|                        |                                |
| ---------------------- | ------------------------------ |
| **Type**               | `enum (of string)`             |
| **Required**           | No                             |
| **Default**            | `"VAr"`                        |
| **Same definition as** | [unit](#CsConverteralpha_unit) |

**Description:** nan

### <a name="ACDCConverterq_value"></a>18.3. Property `CsConverter > ACDCConverter.q > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="IdentifiedObjectdescription"></a>19. Property `CsConverter > IdentifiedObject.description`

**Title:** description

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The description is a free human readable text describing or naming the object. It may be non unique and may not correlate to a naming hierarchy.

## <a name="ACDCConverterminP"></a>20. Property `CsConverter > ACDCConverter.minP`

**Title:** minP

|                        |                                    |
| ---------------------- | ---------------------------------- |
| **Type**               | `object or number`                 |
| **Required**           | No                                 |
| **Same definition as** | [ACDCConverter.p](#ACDCConverterp) |

**Description:** Minimum active power limit. The value is overwritten by values of VsCapabilityCurve, if present.

## <a name="Equipmentaggregate"></a>21. Property `CsConverter > Equipment.aggregate`

**Title:** aggregate

|              |           |
| ------------ | --------- |
| **Type**     | `boolean` |
| **Required** | No        |

**Description:** The aggregate flag provides an alternative way of representing an aggregated (equivalent) element. It is applicable in cases when the dedicated classes for equivalent equipment do not have all of the attributes necessary to represent the required level of detail.  In case the flag is set to “true” the single instance of equipment represents multiple pieces of equipment that have been modelled together as an aggregate equivalent obtained by a network reduction procedure. Examples would be power transformers or synchronous machines operating in parallel modelled as a single aggregate power transformer or aggregate synchronous machine.  
The attribute is not used for EquivalentBranch, EquivalentShunt and EquivalentInjection.

## <a name="EquipmentnetworkAnalysisEnabled"></a>22. Property `CsConverter > Equipment.networkAnalysisEnabled`

**Title:** networkAnalysisEnabled

|              |           |
| ------------ | --------- |
| **Type**     | `boolean` |
| **Required** | No        |

**Description:** The equipment is enabled to participate in network analysis.  If unspecified, the value is assumed to be true.

## <a name="EquipmentnormallyInService"></a>23. Property `CsConverter > Equipment.normallyInService`

**Title:** normallyInService

|              |           |
| ------------ | --------- |
| **Type**     | `boolean` |
| **Required** | No        |

**Description:** Specifies the availability of the equipment under normal operating conditions. True means the equipment is available for topology processing, which determines if the equipment is energized or not. False means that the equipment is treated by network applications as if it is not in the model.

## <a name="IdentifiedObjectmRID"></a>24. Property `CsConverter > IdentifiedObject.mRID`

**Title:** mRID

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** Master resource identifier issued by a model authority. The mRID is unique within an exchange context. Global uniqueness is easily achieved by using a UUID, as specified in RFC 4122, for the mRID. The use of UUID is strongly recommended.
For CIMXML data files in RDF syntax conforming to IEC 61970-552, the mRID is mapped to rdf:ID or rdf:about attributes that identify CIM object elements.

## <a name="ACDCConverterbaseS"></a>25. Property `CsConverter > ACDCConverter.baseS`

**Title:** baseS

|                |                      |
| -------------- | -------------------- |
| **Type**       | `object or number`   |
| **Required**   | No                   |
| **Defined in** | ./ApparentPower.json |

**Description:** Base apparent power of the converter pole. The attribute shall be a positive value.

| Property                                        | Pattern | Type             | Deprecated | Definition                                          | Title/Description |
| ----------------------------------------------- | ------- | ---------------- | ---------- | --------------------------------------------------- | ----------------- |
| - [multiplier](#ACDCConverterbaseS_multiplier ) | No      | enum (of string) | No         | Same as [multiplier](#CsConverteralpha_multiplier ) | nan               |
| - [unit](#ACDCConverterbaseS_unit )             | No      | enum (of string) | No         | Same as [unit](#CsConverteralpha_unit )             | nan               |
| - [value](#ACDCConverterbaseS_value )           | No      | number           | No         | -                                                   | nan               |

### <a name="ACDCConverterbaseS_multiplier"></a>25.1. Property `CsConverter > ACDCConverter.baseS > multiplier`

|                        |                                            |
| ---------------------- | ------------------------------------------ |
| **Type**               | `enum (of string)`                         |
| **Required**           | No                                         |
| **Default**            | `"none"`                                   |
| **Same definition as** | [multiplier](#CsConverteralpha_multiplier) |

**Description:** nan

### <a name="ACDCConverterbaseS_unit"></a>25.2. Property `CsConverter > ACDCConverter.baseS > unit`

|                        |                                |
| ---------------------- | ------------------------------ |
| **Type**               | `enum (of string)`             |
| **Required**           | No                             |
| **Default**            | `"VA"`                         |
| **Same definition as** | [unit](#CsConverteralpha_unit) |

**Description:** nan

### <a name="ACDCConverterbaseS_value"></a>25.3. Property `CsConverter > ACDCConverter.baseS > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="ACDCConverterswitchingLoss"></a>26. Property `CsConverter > ACDCConverter.switchingLoss`

**Title:** switchingLoss

|                |                                  |
| -------------- | -------------------------------- |
| **Type**       | `object or number`               |
| **Required**   | No                               |
| **Defined in** | ./ActivePowerPerCurrentFlow.json |

**Description:** Switching losses, relative to the base apparent power 'baseS'. Refer to poleLossP. The attribute shall be a positive value.

| Property                                                | Pattern | Type             | Deprecated | Definition                                          | Title/Description |
| ------------------------------------------------------- | ------- | ---------------- | ---------- | --------------------------------------------------- | ----------------- |
| - [multiplier](#ACDCConverterswitchingLoss_multiplier ) | No      | enum (of string) | No         | Same as [multiplier](#CsConverteralpha_multiplier ) | nan               |
| - [unit](#ACDCConverterswitchingLoss_unit )             | No      | enum (of string) | No         | Same as [unit](#CsConverteralpha_unit )             | nan               |
| - [value](#ACDCConverterswitchingLoss_value )           | No      | number           | No         | -                                                   | nan               |

### <a name="ACDCConverterswitchingLoss_multiplier"></a>26.1. Property `CsConverter > ACDCConverter.switchingLoss > multiplier`

|                        |                                            |
| ---------------------- | ------------------------------------------ |
| **Type**               | `enum (of string)`                         |
| **Required**           | No                                         |
| **Default**            | `"none"`                                   |
| **Same definition as** | [multiplier](#CsConverteralpha_multiplier) |

**Description:** nan

### <a name="ACDCConverterswitchingLoss_unit"></a>26.2. Property `CsConverter > ACDCConverter.switchingLoss > unit`

|                        |                                |
| ---------------------- | ------------------------------ |
| **Type**               | `enum (of string)`             |
| **Required**           | No                             |
| **Default**            | `"WPerA"`                      |
| **Same definition as** | [unit](#CsConverteralpha_unit) |

**Description:** nan

### <a name="ACDCConverterswitchingLoss_value"></a>26.3. Property `CsConverter > ACDCConverter.switchingLoss > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="EquipmentinService"></a>27. Property `CsConverter > Equipment.inService`

**Title:** inService

|              |           |
| ------------ | --------- |
| **Type**     | `boolean` |
| **Required** | No        |

**Description:** Specifies the availability of the equipment. True means the equipment is available for topology processing, which determines if the equipment is energized or not. False means that the equipment is treated by network applications as if it is not in the model.

## <a name="ACDCConvertertargetPpcc"></a>28. Property `CsConverter > ACDCConverter.targetPpcc`

**Title:** targetPpcc

|                        |                                    |
| ---------------------- | ---------------------------------- |
| **Type**               | `object or number`                 |
| **Required**           | No                                 |
| **Same definition as** | [ACDCConverter.p](#ACDCConverterp) |

**Description:** Real power injection target in AC grid, at point of common coupling.  Load sign convention is used, i.e. positive sign means flow out from a node.

## <a name="ACDCConvertertargetUdc"></a>29. Property `CsConverter > ACDCConverter.targetUdc`

**Title:** targetUdc

|                |                    |
| -------------- | ------------------ |
| **Type**       | `object or number` |
| **Required**   | No                 |
| **Defined in** | ./Voltage.json     |

**Description:** Target value for DC voltage magnitude. The attribute shall be a positive value.

| Property                                            | Pattern | Type             | Deprecated | Definition                                          | Title/Description |
| --------------------------------------------------- | ------- | ---------------- | ---------- | --------------------------------------------------- | ----------------- |
| - [multiplier](#ACDCConvertertargetUdc_multiplier ) | No      | enum (of string) | No         | Same as [multiplier](#CsConverteralpha_multiplier ) | nan               |
| - [unit](#ACDCConvertertargetUdc_unit )             | No      | enum (of string) | No         | Same as [unit](#CsConverteralpha_unit )             | nan               |
| - [value](#ACDCConvertertargetUdc_value )           | No      | number           | No         | -                                                   | nan               |

### <a name="ACDCConvertertargetUdc_multiplier"></a>29.1. Property `CsConverter > ACDCConverter.targetUdc > multiplier`

|                        |                                            |
| ---------------------- | ------------------------------------------ |
| **Type**               | `enum (of string)`                         |
| **Required**           | No                                         |
| **Default**            | `"none"`                                   |
| **Same definition as** | [multiplier](#CsConverteralpha_multiplier) |

**Description:** nan

### <a name="ACDCConvertertargetUdc_unit"></a>29.2. Property `CsConverter > ACDCConverter.targetUdc > unit`

|                        |                                |
| ---------------------- | ------------------------------ |
| **Type**               | `enum (of string)`             |
| **Required**           | No                             |
| **Default**            | `"V"`                          |
| **Same definition as** | [unit](#CsConverteralpha_unit) |

**Description:** nan

### <a name="ACDCConvertertargetUdc_value"></a>29.3. Property `CsConverter > ACDCConverter.targetUdc > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="ACDCConvertervalveU0"></a>30. Property `CsConverter > ACDCConverter.valveU0`

**Title:** valveU0

|                        |                                                    |
| ---------------------- | -------------------------------------------------- |
| **Type**               | `object or number`                                 |
| **Required**           | No                                                 |
| **Same definition as** | [ACDCConverter.targetUdc](#ACDCConvertertargetUdc) |

**Description:** Valve threshold voltage, also called Uvalve. Forward voltage drop when the valve is conducting. Used in loss calculations, i.e. the switchLoss depend on numberOfValves * valveU0.

## <a name="ACDCConverternumberOfValves"></a>31. Property `CsConverter > ACDCConverter.numberOfValves`

**Title:** numberOfValves

|              |           |
| ------------ | --------- |
| **Type**     | `integer` |
| **Required** | No        |

**Description:** Number of valves in the converter. Used in loss calculations.

## <a name="ACDCConverteridc"></a>32. Property `CsConverter > ACDCConverter.idc`

**Title:** idc

|                        |                                                |
| ---------------------- | ---------------------------------------------- |
| **Type**               | `object or number`                             |
| **Required**           | No                                             |
| **Same definition as** | [CsConverter.targetIdc](#CsConvertertargetIdc) |

**Description:** Converter DC current, also called Id. It is converter’s state variable, result from power flow.

## <a name="ACDCConverteridleLoss"></a>33. Property `CsConverter > ACDCConverter.idleLoss`

**Title:** idleLoss

|                        |                                    |
| ---------------------- | ---------------------------------- |
| **Type**               | `object or number`                 |
| **Required**           | No                                 |
| **Same definition as** | [ACDCConverter.p](#ACDCConverterp) |

**Description:** Active power loss in pole at no power transfer. It is converter’s configuration data used in power flow. The attribute shall be a positive value.

## <a name="CsConvertermaxIdc"></a>34. Property `CsConverter > CsConverter.maxIdc`

**Title:** maxIdc

|                        |                                                |
| ---------------------- | ---------------------------------------------- |
| **Type**               | `object or number`                             |
| **Required**           | No                                             |
| **Same definition as** | [CsConverter.targetIdc](#CsConvertertargetIdc) |

**Description:** The maximum direct current (Id) on the DC side at which the converter should operate. It is converter’s configuration data use in power flow. The attribute shall be a positive value.

## <a name="ACDCConvertermaxUdc"></a>35. Property `CsConverter > ACDCConverter.maxUdc`

**Title:** maxUdc

|                        |                                                    |
| ---------------------- | -------------------------------------------------- |
| **Type**               | `object or number`                                 |
| **Required**           | No                                                 |
| **Same definition as** | [ACDCConverter.targetUdc](#ACDCConvertertargetUdc) |

**Description:** The maximum voltage on the DC side at which the converter should operate. It is converter’s configuration data used in power flow. The attribute shall be a positive value.

## <a name="ACDCConverterminUdc"></a>36. Property `CsConverter > ACDCConverter.minUdc`

**Title:** minUdc

|                        |                                                    |
| ---------------------- | -------------------------------------------------- |
| **Type**               | `object or number`                                 |
| **Required**           | No                                                 |
| **Same definition as** | [ACDCConverter.targetUdc](#ACDCConvertertargetUdc) |

**Description:** The minimum voltage on the DC side at which the converter should operate. It is converter’s configuration data used in power flow. The attribute shall be a positive value.

## <a name="ACDCConverterpoleLossP"></a>37. Property `CsConverter > ACDCConverter.poleLossP`

**Title:** poleLossP

|                        |                                    |
| ---------------------- | ---------------------------------- |
| **Type**               | `object or number`                 |
| **Required**           | No                                 |
| **Same definition as** | [ACDCConverter.p](#ACDCConverterp) |

**Description:** The active power loss at a DC Pole 
= idleLoss + switchingLoss*|Idc| + resitiveLoss*Idc^2.
For lossless operation Pdc=Pac.
For rectifier operation with losses Pdc=Pac-lossP.
For inverter operation with losses Pdc=Pac+lossP.
It is converter’s state variable used in power flow. The attribute shall be a positive value.

## <a name="CsConverterratedIdc"></a>38. Property `CsConverter > CsConverter.ratedIdc`

**Title:** ratedIdc

|                        |                                                |
| ---------------------- | ---------------------------------------------- |
| **Type**               | `object or number`                             |
| **Required**           | No                                             |
| **Same definition as** | [CsConverter.targetIdc](#CsConvertertargetIdc) |

**Description:** Rated converter DC current, also called IdN. The attribute shall be a positive value. It is converter’s configuration data used in power flow.

## <a name="ACDCConverterratedUdc"></a>39. Property `CsConverter > ACDCConverter.ratedUdc`

**Title:** ratedUdc

|                        |                                                    |
| ---------------------- | -------------------------------------------------- |
| **Type**               | `object or number`                                 |
| **Required**           | No                                                 |
| **Same definition as** | [ACDCConverter.targetUdc](#ACDCConvertertargetUdc) |

**Description:** Rated converter DC voltage, also called UdN. The attribute shall be a positive value. It is converter’s configuration data used in power flow. For instance a bipolar HVDC link with value  200 kV has a 400kV difference between the dc lines.

## <a name="ACDCConverterresistiveLoss"></a>40. Property `CsConverter > ACDCConverter.resistiveLoss`

**Title:** resistiveLoss

|                |                    |
| -------------- | ------------------ |
| **Type**       | `object or number` |
| **Required**   | No                 |
| **Defined in** | ./Resistance.json  |

**Description:** It is converter’s configuration data used in power flow. Refer to poleLossP. The attribute shall be a positive value.

| Property                                                | Pattern | Type             | Deprecated | Definition                                          | Title/Description |
| ------------------------------------------------------- | ------- | ---------------- | ---------- | --------------------------------------------------- | ----------------- |
| - [multiplier](#ACDCConverterresistiveLoss_multiplier ) | No      | enum (of string) | No         | Same as [multiplier](#CsConverteralpha_multiplier ) | nan               |
| - [unit](#ACDCConverterresistiveLoss_unit )             | No      | enum (of string) | No         | Same as [unit](#CsConverteralpha_unit )             | nan               |
| - [value](#ACDCConverterresistiveLoss_value )           | No      | number           | No         | -                                                   | nan               |

### <a name="ACDCConverterresistiveLoss_multiplier"></a>40.1. Property `CsConverter > ACDCConverter.resistiveLoss > multiplier`

|                        |                                            |
| ---------------------- | ------------------------------------------ |
| **Type**               | `enum (of string)`                         |
| **Required**           | No                                         |
| **Default**            | `"none"`                                   |
| **Same definition as** | [multiplier](#CsConverteralpha_multiplier) |

**Description:** nan

### <a name="ACDCConverterresistiveLoss_unit"></a>40.2. Property `CsConverter > ACDCConverter.resistiveLoss > unit`

|                        |                                |
| ---------------------- | ------------------------------ |
| **Type**               | `enum (of string)`             |
| **Required**           | No                             |
| **Default**            | `"ohm"`                        |
| **Same definition as** | [unit](#CsConverteralpha_unit) |

**Description:** nan

### <a name="ACDCConverterresistiveLoss_value"></a>40.3. Property `CsConverter > ACDCConverter.resistiveLoss > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="ACDCConvertermaxP"></a>41. Property `CsConverter > ACDCConverter.maxP`

**Title:** maxP

|                        |                                    |
| ---------------------- | ---------------------------------- |
| **Type**               | `object or number`                 |
| **Required**           | No                                 |
| **Same definition as** | [ACDCConverter.p](#ACDCConverterp) |

**Description:** Maximum active power limit. The value is overwritten by values of VsCapabilityCurve, if present.

## <a name="ACDCConverteruc"></a>42. Property `CsConverter > ACDCConverter.uc`

**Title:** uc

|                        |                                                    |
| ---------------------- | -------------------------------------------------- |
| **Type**               | `object or number`                                 |
| **Required**           | No                                                 |
| **Same definition as** | [ACDCConverter.targetUdc](#ACDCConvertertargetUdc) |

**Description:** Line-to-line converter voltage, the voltage at the AC side of the valve. It is converter’s state variable, result from power flow. The attribute shall be a positive value.

## <a name="ACDCConverterudc"></a>43. Property `CsConverter > ACDCConverter.udc`

**Title:** udc

|                        |                                                    |
| ---------------------- | -------------------------------------------------- |
| **Type**               | `object or number`                                 |
| **Required**           | No                                                 |
| **Same definition as** | [ACDCConverter.targetUdc](#ACDCConvertertargetUdc) |

**Description:** Converter voltage at the DC side, also called Ud. It is converter’s state variable, result from power flow. The attribute shall be a positive value.

## <a name="IdentifiedObjectaliasName"></a>44. Property `CsConverter > IdentifiedObject.aliasName`

**Title:** aliasName

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The aliasName is free text human readable name of the object alternative to IdentifiedObject.name. It may be non unique and may not correlate to a naming hierarchy.
The attribute aliasName is retained because of backwards compatibility between CIM relases. It is however recommended to replace aliasName with the Name class as aliasName is planned for retirement at a future time.

## <a name="CsConverterpPccControl"></a>45. Property `CsConverter > CsConverter.pPccControl`

**Title:** pPccControl

|                |                          |
| -------------- | ------------------------ |
| **Type**       | `enum (of string)`       |
| **Required**   | No                       |
| **Defined in** | ./CsPpccControlKind.json |

**Description:** Kind of active power control.

Must be one of:
* "activePower"
* "dcVoltage"
* "dcCurrent"

## <a name="IdentifiedObjectname"></a>46. Property `CsConverter > IdentifiedObject.name`

**Title:** name

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The name is any free human readable and possibly non unique text naming the object.

----------------------------------------------------------------------------------------------------------------------------
Generated using [json-schema-for-humans](https://github.com/coveooss/json-schema-for-humans) on 2024-04-10 at 07:14:21 -0600
