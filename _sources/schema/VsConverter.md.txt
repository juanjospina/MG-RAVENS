# VsConverter

- [1. Property `VsConverter > PowerSystemResource.Location`](#PowerSystemResourceLocation)
- [2. Property `VsConverter > PowerSystemResource.GenericAction`](#PowerSystemResourceGenericAction)
- [3. Property `VsConverter > ConductingEquipment.Terminals`](#ConductingEquipmentTerminals)
  - [3.1. VsConverter > ConductingEquipment.Terminals > Terminal.json](#autogenerated_heading_2)
    - [3.1.1. Property `VsConverter > ConductingEquipment.Terminals > Terminal > ACDCTerminal.connected`](#ConductingEquipmentTerminals_items_ACDCTerminalconnected)
    - [3.1.2. Property `VsConverter > ConductingEquipment.Terminals > Terminal > Terminal.phases`](#ConductingEquipmentTerminals_items_Terminalphases)
    - [3.1.3. Property `VsConverter > ConductingEquipment.Terminals > Terminal > ACDCTerminal.sequenceNumber`](#ConductingEquipmentTerminals_items_ACDCTerminalsequenceNumber)
    - [3.1.4. Property `VsConverter > ConductingEquipment.Terminals > Terminal > IdentifiedObject.description`](#ConductingEquipmentTerminals_items_IdentifiedObjectdescription)
    - [3.1.5. Property `VsConverter > ConductingEquipment.Terminals > Terminal > IdentifiedObject.aliasName`](#ConductingEquipmentTerminals_items_IdentifiedObjectaliasName)
    - [3.1.6. Property `VsConverter > ConductingEquipment.Terminals > Terminal > IdentifiedObject.mRID`](#ConductingEquipmentTerminals_items_IdentifiedObjectmRID)
    - [3.1.7. Property `VsConverter > ConductingEquipment.Terminals > Terminal > IdentifiedObject.name`](#ConductingEquipmentTerminals_items_IdentifiedObjectname)
- [4. Property `VsConverter > ConductingEquipment.BaseVoltage`](#ConductingEquipmentBaseVoltage)
- [5. Property `VsConverter > ConductingEquipment.SvStatus`](#ConductingEquipmentSvStatus)
  - [5.1. VsConverter > ConductingEquipment.SvStatus > SvStatus.json](#autogenerated_heading_3)
    - [5.1.1. Property `VsConverter > ConductingEquipment.SvStatus > SvStatus > SvStatus.inService`](#ConductingEquipmentSvStatus_items_SvStatusinService)
    - [5.1.2. Property `VsConverter > ConductingEquipment.SvStatus > SvStatus > SvStatus.phase`](#ConductingEquipmentSvStatus_items_SvStatusphase)
- [6. Property `VsConverter > VsConverter.maxValveCurrent`](#VsConvertermaxValveCurrent)
  - [6.1. Property `VsConverter > VsConverter.maxValveCurrent > multiplier`](#VsConvertermaxValveCurrent_multiplier)
  - [6.2. Property `VsConverter > VsConverter.maxValveCurrent > unit`](#VsConvertermaxValveCurrent_unit)
  - [6.3. Property `VsConverter > VsConverter.maxValveCurrent > value`](#VsConvertermaxValveCurrent_value)
- [7. Property `VsConverter > ACDCConverter.p`](#ACDCConverterp)
  - [7.1. Property `VsConverter > ACDCConverter.p > multiplier`](#ACDCConverterp_multiplier)
  - [7.2. Property `VsConverter > ACDCConverter.p > unit`](#ACDCConverterp_unit)
  - [7.3. Property `VsConverter > ACDCConverter.p > value`](#ACDCConverterp_value)
- [8. Property `VsConverter > ACDCConverter.q`](#ACDCConverterq)
  - [8.1. Property `VsConverter > ACDCConverter.q > multiplier`](#ACDCConverterq_multiplier)
  - [8.2. Property `VsConverter > ACDCConverter.q > unit`](#ACDCConverterq_unit)
  - [8.3. Property `VsConverter > ACDCConverter.q > value`](#ACDCConverterq_value)
- [9. Property `VsConverter > IdentifiedObject.description`](#IdentifiedObjectdescription)
- [10. Property `VsConverter > ACDCConverter.minP`](#ACDCConverterminP)
- [11. Property `VsConverter > Equipment.aggregate`](#Equipmentaggregate)
- [12. Property `VsConverter > Equipment.networkAnalysisEnabled`](#EquipmentnetworkAnalysisEnabled)
- [13. Property `VsConverter > ACDCConverter.ratedUdc`](#ACDCConverterratedUdc)
  - [13.1. Property `VsConverter > ACDCConverter.ratedUdc > multiplier`](#ACDCConverterratedUdc_multiplier)
  - [13.2. Property `VsConverter > ACDCConverter.ratedUdc > unit`](#ACDCConverterratedUdc_unit)
  - [13.3. Property `VsConverter > ACDCConverter.ratedUdc > value`](#ACDCConverterratedUdc_value)
- [14. Property `VsConverter > Equipment.normallyInService`](#EquipmentnormallyInService)
- [15. Property `VsConverter > VsConverter.pPccControl`](#VsConverterpPccControl)
- [16. Property `VsConverter > ACDCConverter.baseS`](#ACDCConverterbaseS)
  - [16.1. Property `VsConverter > ACDCConverter.baseS > multiplier`](#ACDCConverterbaseS_multiplier)
  - [16.2. Property `VsConverter > ACDCConverter.baseS > unit`](#ACDCConverterbaseS_unit)
  - [16.3. Property `VsConverter > ACDCConverter.baseS > value`](#ACDCConverterbaseS_value)
- [17. Property `VsConverter > ACDCConverter.switchingLoss`](#ACDCConverterswitchingLoss)
  - [17.1. Property `VsConverter > ACDCConverter.switchingLoss > multiplier`](#ACDCConverterswitchingLoss_multiplier)
  - [17.2. Property `VsConverter > ACDCConverter.switchingLoss > unit`](#ACDCConverterswitchingLoss_unit)
  - [17.3. Property `VsConverter > ACDCConverter.switchingLoss > value`](#ACDCConverterswitchingLoss_value)
- [18. Property `VsConverter > Equipment.inService`](#EquipmentinService)
- [19. Property `VsConverter > VsConverter.qShare`](#VsConverterqShare)
  - [19.1. Property `VsConverter > VsConverter.qShare > multiplier`](#VsConverterqShare_multiplier)
  - [19.2. Property `VsConverter > VsConverter.qShare > unit`](#VsConverterqShare_unit)
  - [19.3. Property `VsConverter > VsConverter.qShare > value`](#VsConverterqShare_value)
- [20. Property `VsConverter > ACDCConverter.targetPpcc`](#ACDCConvertertargetPpcc)
- [21. Property `VsConverter > VsConverter.targetQpcc`](#VsConvertertargetQpcc)
- [22. Property `VsConverter > ACDCConverter.targetUdc`](#ACDCConvertertargetUdc)
- [23. Property `VsConverter > VsConverter.targetUpcc`](#VsConvertertargetUpcc)
- [24. Property `VsConverter > VsConverter.droopCompensation`](#VsConverterdroopCompensation)
  - [24.1. Property `VsConverter > VsConverter.droopCompensation > multiplier`](#VsConverterdroopCompensation_multiplier)
  - [24.2. Property `VsConverter > VsConverter.droopCompensation > unit`](#VsConverterdroopCompensation_unit)
  - [24.3. Property `VsConverter > VsConverter.droopCompensation > value`](#VsConverterdroopCompensation_value)
- [25. Property `VsConverter > VsConverter.droop`](#VsConverterdroop)
  - [25.1. Property `VsConverter > VsConverter.droop > multiplier`](#VsConverterdroop_multiplier)
  - [25.2. Property `VsConverter > VsConverter.droop > unit`](#VsConverterdroop_unit)
  - [25.3. Property `VsConverter > VsConverter.droop > value`](#VsConverterdroop_value)
- [26. Property `VsConverter > VsConverter.maxModulationIndex`](#VsConvertermaxModulationIndex)
- [27. Property `VsConverter > VsConverter.qPccControl`](#VsConverterqPccControl)
- [28. Property `VsConverter > ACDCConverter.valveU0`](#ACDCConvertervalveU0)
- [29. Property `VsConverter > VsConverter.delta`](#VsConverterdelta)
  - [29.1. Property `VsConverter > VsConverter.delta > multiplier`](#VsConverterdelta_multiplier)
  - [29.2. Property `VsConverter > VsConverter.delta > unit`](#VsConverterdelta_unit)
  - [29.3. Property `VsConverter > VsConverter.delta > value`](#VsConverterdelta_value)
- [30. Property `VsConverter > ACDCConverter.idc`](#ACDCConverteridc)
- [31. Property `VsConverter > ACDCConverter.idleLoss`](#ACDCConverteridleLoss)
- [32. Property `VsConverter > ACDCConverter.numberOfValves`](#ACDCConverternumberOfValves)
- [33. Property `VsConverter > ACDCConverter.maxUdc`](#ACDCConvertermaxUdc)
- [34. Property `VsConverter > VsConverter.targetPowerFactorPcc`](#VsConvertertargetPowerFactorPcc)
- [35. Property `VsConverter > VsConverter.targetPhasePcc`](#VsConvertertargetPhasePcc)
- [36. Property `VsConverter > VsConverter.targetPWMfactor`](#VsConvertertargetPWMfactor)
- [37. Property `VsConverter > ACDCConverter.minUdc`](#ACDCConverterminUdc)
- [38. Property `VsConverter > ACDCConverter.poleLossP`](#ACDCConverterpoleLossP)
- [39. Property `VsConverter > ACDCConverter.resistiveLoss`](#ACDCConverterresistiveLoss)
- [40. Property `VsConverter > ACDCConverter.maxP`](#ACDCConvertermaxP)
- [41. Property `VsConverter > ACDCConverter.uc`](#ACDCConverteruc)
- [42. Property `VsConverter > ACDCConverter.udc`](#ACDCConverterudc)
- [43. Property `VsConverter > VsConverter.uv`](#VsConverteruv)
- [44. Property `VsConverter > IdentifiedObject.aliasName`](#IdentifiedObjectaliasName)
- [45. Property `VsConverter > IdentifiedObject.mRID`](#IdentifiedObjectmRID)
- [46. Property `VsConverter > IdentifiedObject.name`](#IdentifiedObjectname)

**Title:** VsConverter

|                           |                                                                           |
| ------------------------- | ------------------------------------------------------------------------- |
| **Type**                  | `object`                                                                  |
| **Required**              | No                                                                        |
| **Additional properties** | [[Any type: allowed]](# "Additional Properties of any type are allowed.") |

**Description:** DC side of the voltage source converter (VSC).

| Property                                                                  | Pattern | Type             | Deprecated | Definition                                                              | Title/Description      |
| ------------------------------------------------------------------------- | ------- | ---------------- | ---------- | ----------------------------------------------------------------------- | ---------------------- |
| - [PowerSystemResource.Location](#PowerSystemResourceLocation )           | No      | string           | No         | -                                                                       | -                      |
| - [PowerSystemResource.GenericAction](#PowerSystemResourceGenericAction ) | No      | string           | No         | -                                                                       | -                      |
| - [ConductingEquipment.Terminals](#ConductingEquipmentTerminals )         | No      | array            | No         | -                                                                       | Terminal               |
| - [ConductingEquipment.BaseVoltage](#ConductingEquipmentBaseVoltage )     | No      | string           | No         | -                                                                       | -                      |
| - [ConductingEquipment.SvStatus](#ConductingEquipmentSvStatus )           | No      | array            | No         | -                                                                       | SvStatus               |
| - [VsConverter.maxValveCurrent](#VsConvertermaxValveCurrent )             | No      | object or number | No         | In ./CurrentFlow.json                                                   | maxValveCurrent        |
| - [ACDCConverter.p](#ACDCConverterp )                                     | No      | object or number | No         | In ./ActivePower.json                                                   | p                      |
| - [ACDCConverter.q](#ACDCConverterq )                                     | No      | object or number | No         | In ./ReactivePower.json                                                 | q                      |
| - [IdentifiedObject.description](#IdentifiedObjectdescription )           | No      | string           | No         | -                                                                       | description            |
| - [ACDCConverter.minP](#ACDCConverterminP )                               | No      | object or number | No         | Same as [ACDCConverter.p](#ACDCConverterp )                             | minP                   |
| - [Equipment.aggregate](#Equipmentaggregate )                             | No      | boolean          | No         | -                                                                       | aggregate              |
| - [Equipment.networkAnalysisEnabled](#EquipmentnetworkAnalysisEnabled )   | No      | boolean          | No         | -                                                                       | networkAnalysisEnabled |
| - [ACDCConverter.ratedUdc](#ACDCConverterratedUdc )                       | No      | object or number | No         | In ./Voltage.json                                                       | ratedUdc               |
| - [Equipment.normallyInService](#EquipmentnormallyInService )             | No      | boolean          | No         | -                                                                       | normallyInService      |
| - [VsConverter.pPccControl](#VsConverterpPccControl )                     | No      | enum (of string) | No         | In ./VsPpccControlKind.json                                             | pPccControl            |
| - [ACDCConverter.baseS](#ACDCConverterbaseS )                             | No      | object or number | No         | In ./ApparentPower.json                                                 | baseS                  |
| - [ACDCConverter.switchingLoss](#ACDCConverterswitchingLoss )             | No      | object or number | No         | In ./ActivePowerPerCurrentFlow.json                                     | switchingLoss          |
| - [Equipment.inService](#EquipmentinService )                             | No      | boolean          | No         | -                                                                       | inService              |
| - [VsConverter.qShare](#VsConverterqShare )                               | No      | object or number | No         | In ./PerCent.json                                                       | qShare                 |
| - [ACDCConverter.targetPpcc](#ACDCConvertertargetPpcc )                   | No      | object or number | No         | Same as [ACDCConverter.p](#ACDCConverterp )                             | targetPpcc             |
| - [VsConverter.targetQpcc](#VsConvertertargetQpcc )                       | No      | object or number | No         | Same as [ACDCConverter.q](#ACDCConverterq )                             | targetQpcc             |
| - [ACDCConverter.targetUdc](#ACDCConvertertargetUdc )                     | No      | object or number | No         | Same as [ACDCConverter.ratedUdc](#ACDCConverterratedUdc )               | targetUdc              |
| - [VsConverter.targetUpcc](#VsConvertertargetUpcc )                       | No      | object or number | No         | Same as [ACDCConverter.ratedUdc](#ACDCConverterratedUdc )               | targetUpcc             |
| - [VsConverter.droopCompensation](#VsConverterdroopCompensation )         | No      | object or number | No         | In ./Resistance.json                                                    | droopCompensation      |
| - [VsConverter.droop](#VsConverterdroop )                                 | No      | object or number | No         | In ./PU.json                                                            | droop                  |
| - [VsConverter.maxModulationIndex](#VsConvertermaxModulationIndex )       | No      | number           | No         | -                                                                       | maxModulationIndex     |
| - [VsConverter.qPccControl](#VsConverterqPccControl )                     | No      | enum (of string) | No         | In ./VsQpccControlKind.json                                             | qPccControl            |
| - [ACDCConverter.valveU0](#ACDCConvertervalveU0 )                         | No      | object or number | No         | Same as [ACDCConverter.ratedUdc](#ACDCConverterratedUdc )               | valveU0                |
| - [VsConverter.delta](#VsConverterdelta )                                 | No      | object or number | No         | In ./AngleDegrees.json                                                  | delta                  |
| - [ACDCConverter.idc](#ACDCConverteridc )                                 | No      | object or number | No         | Same as [VsConverter.maxValveCurrent](#VsConvertermaxValveCurrent )     | idc                    |
| - [ACDCConverter.idleLoss](#ACDCConverteridleLoss )                       | No      | object or number | No         | Same as [ACDCConverter.p](#ACDCConverterp )                             | idleLoss               |
| - [ACDCConverter.numberOfValves](#ACDCConverternumberOfValves )           | No      | integer          | No         | -                                                                       | numberOfValves         |
| - [ACDCConverter.maxUdc](#ACDCConvertermaxUdc )                           | No      | object or number | No         | Same as [ACDCConverter.ratedUdc](#ACDCConverterratedUdc )               | maxUdc                 |
| - [VsConverter.targetPowerFactorPcc](#VsConvertertargetPowerFactorPcc )   | No      | number           | No         | -                                                                       | targetPowerFactorPcc   |
| - [VsConverter.targetPhasePcc](#VsConvertertargetPhasePcc )               | No      | object or number | No         | Same as [VsConverter.delta](#VsConverterdelta )                         | targetPhasePcc         |
| - [VsConverter.targetPWMfactor](#VsConvertertargetPWMfactor )             | No      | number           | No         | -                                                                       | targetPWMfactor        |
| - [ACDCConverter.minUdc](#ACDCConverterminUdc )                           | No      | object or number | No         | Same as [ACDCConverter.ratedUdc](#ACDCConverterratedUdc )               | minUdc                 |
| - [ACDCConverter.poleLossP](#ACDCConverterpoleLossP )                     | No      | object or number | No         | Same as [ACDCConverter.p](#ACDCConverterp )                             | poleLossP              |
| - [ACDCConverter.resistiveLoss](#ACDCConverterresistiveLoss )             | No      | object or number | No         | Same as [VsConverter.droopCompensation](#VsConverterdroopCompensation ) | resistiveLoss          |
| - [ACDCConverter.maxP](#ACDCConvertermaxP )                               | No      | object or number | No         | Same as [ACDCConverter.p](#ACDCConverterp )                             | maxP                   |
| - [ACDCConverter.uc](#ACDCConverteruc )                                   | No      | object or number | No         | Same as [ACDCConverter.ratedUdc](#ACDCConverterratedUdc )               | uc                     |
| - [ACDCConverter.udc](#ACDCConverterudc )                                 | No      | object or number | No         | Same as [ACDCConverter.ratedUdc](#ACDCConverterratedUdc )               | udc                    |
| - [VsConverter.uv](#VsConverteruv )                                       | No      | object or number | No         | Same as [ACDCConverter.ratedUdc](#ACDCConverterratedUdc )               | uv                     |
| - [IdentifiedObject.aliasName](#IdentifiedObjectaliasName )               | No      | string           | No         | -                                                                       | aliasName              |
| - [IdentifiedObject.mRID](#IdentifiedObjectmRID )                         | No      | string           | No         | -                                                                       | mRID                   |
| - [IdentifiedObject.name](#IdentifiedObjectname )                         | No      | string           | No         | -                                                                       | name                   |

## <a name="PowerSystemResourceLocation"></a>1. Property `VsConverter > PowerSystemResource.Location`

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

## <a name="PowerSystemResourceGenericAction"></a>2. Property `VsConverter > PowerSystemResource.GenericAction`

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

## <a name="ConductingEquipmentTerminals"></a>3. Property `VsConverter > ConductingEquipment.Terminals`

**Title:** Terminal

|              |         |
| ------------ | ------- |
| **Type**     | `array` |
| **Required** | No      |

**Description:** An AC electrical connection point to a piece of conducting equipment. Terminals are connected at physical connection points called connectivity nodes.

|                      | Array restrictions |
| -------------------- | ------------------ |
| **Min items**        | N/A                |
| **Max items**        | N/A                |
| **Items unicity**    | False              |
| **Additional items** | False              |
| **Tuple validation** | See below          |

| Each item of this array must be                      | Description                                                                                                                                            |
| ---------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------ |
| [Terminal.json](#ConductingEquipmentTerminals_items) | An AC electrical connection point to a piece of conducting equipment. Terminals are connected at physical connection points called connectivity nodes. |

### <a name="autogenerated_heading_2"></a>3.1. VsConverter > ConductingEquipment.Terminals > Terminal.json

|                           |                                                                           |
| ------------------------- | ------------------------------------------------------------------------- |
| **Type**                  | `object`                                                                  |
| **Required**              | No                                                                        |
| **Additional properties** | [[Any type: allowed]](# "Additional Properties of any type are allowed.") |
| **Defined in**            | ./Terminal.json                                                           |

**Description:** An AC electrical connection point to a piece of conducting equipment. Terminals are connected at physical connection points called connectivity nodes.

| Property                                                                                           | Pattern | Type             | Deprecated | Definition          | Title/Description |
| -------------------------------------------------------------------------------------------------- | ------- | ---------------- | ---------- | ------------------- | ----------------- |
| - [ACDCTerminal.connected](#ConductingEquipmentTerminals_items_ACDCTerminalconnected )             | No      | boolean          | No         | -                   | connected         |
| - [Terminal.phases](#ConductingEquipmentTerminals_items_Terminalphases )                           | No      | enum (of string) | No         | In ./PhaseCode.json | phases            |
| - [ACDCTerminal.sequenceNumber](#ConductingEquipmentTerminals_items_ACDCTerminalsequenceNumber )   | No      | integer          | No         | -                   | sequenceNumber    |
| - [IdentifiedObject.description](#ConductingEquipmentTerminals_items_IdentifiedObjectdescription ) | No      | string           | No         | -                   | description       |
| - [IdentifiedObject.aliasName](#ConductingEquipmentTerminals_items_IdentifiedObjectaliasName )     | No      | string           | No         | -                   | aliasName         |
| - [IdentifiedObject.mRID](#ConductingEquipmentTerminals_items_IdentifiedObjectmRID )               | No      | string           | No         | -                   | mRID              |
| - [IdentifiedObject.name](#ConductingEquipmentTerminals_items_IdentifiedObjectname )               | No      | string           | No         | -                   | name              |

#### <a name="ConductingEquipmentTerminals_items_ACDCTerminalconnected"></a>3.1.1. Property `VsConverter > ConductingEquipment.Terminals > Terminal > ACDCTerminal.connected`

**Title:** connected

|              |           |
| ------------ | --------- |
| **Type**     | `boolean` |
| **Required** | No        |

**Description:** The connected status is related to a bus-branch model and the topological node to terminal relation.  True implies the terminal is connected to the related topological node and false implies it is not. 
In a bus-branch model, the connected status is used to tell if equipment is disconnected without having to change the connectivity described by the topological node to terminal relation. A valid case is that conducting equipment can be connected in one end and open in the other. In particular for an AC line segment, where the reactive line charging can be significant, this is a relevant case.

#### <a name="ConductingEquipmentTerminals_items_Terminalphases"></a>3.1.2. Property `VsConverter > ConductingEquipment.Terminals > Terminal > Terminal.phases`

**Title:** phases

|                |                    |
| -------------- | ------------------ |
| **Type**       | `enum (of string)` |
| **Required**   | No                 |
| **Defined in** | ./PhaseCode.json   |

**Description:** Represents the normal network phasing condition. If the attribute is missing, three phases (ABC) shall be assumed, except for terminals of grounding classes (specializations of EarthFaultCompensator, GroundDisconnector, and Ground) which will be assumed to be N. Therefore, phase code ABCN is explicitly declared when needed, e.g. for star point grounding equipment.
The phase code on terminals connecting same ConnectivityNode or same TopologicalNode as well as for equipment between two terminals shall be consistent.

Must be one of:
* "ABCN"
* "ABC"
* "ABN"
* "ACN"
* "BCN"
* "AB"
* "AC"
* "BC"
* "AN"
* "BN"
* "CN"
* "A"
* "B"
* "C"
* "N"
* "s1N"
* "s2N"
* "s12N"
* "s1"
* "s2"
* "s12"
* "none"
* "X"
* "XY"
* "XN"
* "XYN"

#### <a name="ConductingEquipmentTerminals_items_ACDCTerminalsequenceNumber"></a>3.1.3. Property `VsConverter > ConductingEquipment.Terminals > Terminal > ACDCTerminal.sequenceNumber`

**Title:** sequenceNumber

|              |           |
| ------------ | --------- |
| **Type**     | `integer` |
| **Required** | No        |

**Description:** The orientation of the terminal connections for a multiple terminal conducting equipment.  The sequence numbering starts with 1 and additional terminals should follow in increasing order.   The first terminal is the "starting point" for a two terminal branch.

#### <a name="ConductingEquipmentTerminals_items_IdentifiedObjectdescription"></a>3.1.4. Property `VsConverter > ConductingEquipment.Terminals > Terminal > IdentifiedObject.description`

**Title:** description

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The description is a free human readable text describing or naming the object. It may be non unique and may not correlate to a naming hierarchy.

#### <a name="ConductingEquipmentTerminals_items_IdentifiedObjectaliasName"></a>3.1.5. Property `VsConverter > ConductingEquipment.Terminals > Terminal > IdentifiedObject.aliasName`

**Title:** aliasName

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The aliasName is free text human readable name of the object alternative to IdentifiedObject.name. It may be non unique and may not correlate to a naming hierarchy.
The attribute aliasName is retained because of backwards compatibility between CIM relases. It is however recommended to replace aliasName with the Name class as aliasName is planned for retirement at a future time.

#### <a name="ConductingEquipmentTerminals_items_IdentifiedObjectmRID"></a>3.1.6. Property `VsConverter > ConductingEquipment.Terminals > Terminal > IdentifiedObject.mRID`

**Title:** mRID

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** Master resource identifier issued by a model authority. The mRID is unique within an exchange context. Global uniqueness is easily achieved by using a UUID, as specified in RFC 4122, for the mRID. The use of UUID is strongly recommended.
For CIMXML data files in RDF syntax conforming to IEC 61970-552, the mRID is mapped to rdf:ID or rdf:about attributes that identify CIM object elements.

#### <a name="ConductingEquipmentTerminals_items_IdentifiedObjectname"></a>3.1.7. Property `VsConverter > ConductingEquipment.Terminals > Terminal > IdentifiedObject.name`

**Title:** name

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The name is any free human readable and possibly non unique text naming the object.

## <a name="ConductingEquipmentBaseVoltage"></a>4. Property `VsConverter > ConductingEquipment.BaseVoltage`

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

## <a name="ConductingEquipmentSvStatus"></a>5. Property `VsConverter > ConductingEquipment.SvStatus`

**Title:** SvStatus

|              |         |
| ------------ | ------- |
| **Type**     | `array` |
| **Required** | No      |

**Description:** State variable for status.

|                      | Array restrictions |
| -------------------- | ------------------ |
| **Min items**        | N/A                |
| **Max items**        | N/A                |
| **Items unicity**    | False              |
| **Additional items** | False              |
| **Tuple validation** | See below          |

| Each item of this array must be                     | Description                |
| --------------------------------------------------- | -------------------------- |
| [SvStatus.json](#ConductingEquipmentSvStatus_items) | State variable for status. |

### <a name="autogenerated_heading_3"></a>5.1. VsConverter > ConductingEquipment.SvStatus > SvStatus.json

|                           |                                                                           |
| ------------------------- | ------------------------------------------------------------------------- |
| **Type**                  | `object`                                                                  |
| **Required**              | No                                                                        |
| **Additional properties** | [[Any type: allowed]](# "Additional Properties of any type are allowed.") |
| **Defined in**            | ./SvStatus.json                                                           |

**Description:** State variable for status.

| Property                                                                      | Pattern | Type             | Deprecated | Definition                | Title/Description |
| ----------------------------------------------------------------------------- | ------- | ---------------- | ---------- | ------------------------- | ----------------- |
| - [SvStatus.inService](#ConductingEquipmentSvStatus_items_SvStatusinService ) | No      | boolean          | No         | -                         | inService         |
| - [SvStatus.phase](#ConductingEquipmentSvStatus_items_SvStatusphase )         | No      | enum (of string) | No         | In ./SinglePhaseKind.json | phase             |

#### <a name="ConductingEquipmentSvStatus_items_SvStatusinService"></a>5.1.1. Property `VsConverter > ConductingEquipment.SvStatus > SvStatus > SvStatus.inService`

**Title:** inService

|              |           |
| ------------ | --------- |
| **Type**     | `boolean` |
| **Required** | No        |

**Description:** The in service status as a result of topology processing.  It indicates if the equipment is considered as energized by the power flow. It reflects if the equipment is connected within a solvable island.  It does not necessarily reflect whether or not the island was solved by the power flow.

#### <a name="ConductingEquipmentSvStatus_items_SvStatusphase"></a>5.1.2. Property `VsConverter > ConductingEquipment.SvStatus > SvStatus > SvStatus.phase`

**Title:** phase

|                |                        |
| -------------- | ---------------------- |
| **Type**       | `enum (of string)`     |
| **Required**   | No                     |
| **Defined in** | ./SinglePhaseKind.json |

**Description:** The individual phase status.    If the attribute is unspecified, then three phase model is assumed.

Must be one of:
* "A"
* "B"
* "C"
* "N"
* "s1"
* "s2"

## <a name="VsConvertermaxValveCurrent"></a>6. Property `VsConverter > VsConverter.maxValveCurrent`

**Title:** maxValveCurrent

|                |                    |
| -------------- | ------------------ |
| **Type**       | `object or number` |
| **Required**   | No                 |
| **Defined in** | ./CurrentFlow.json |

**Description:** The maximum current through a valve. It is converter’s configuration data.

| Property                                                | Pattern | Type             | Deprecated | Definition               | Title/Description |
| ------------------------------------------------------- | ------- | ---------------- | ---------- | ------------------------ | ----------------- |
| - [multiplier](#VsConvertermaxValveCurrent_multiplier ) | No      | enum (of string) | No         | In ./UnitMultiplier.json | nan               |
| - [unit](#VsConvertermaxValveCurrent_unit )             | No      | enum (of string) | No         | In ./UnitSymbol.json     | nan               |
| - [value](#VsConvertermaxValveCurrent_value )           | No      | number           | No         | -                        | nan               |

### <a name="VsConvertermaxValveCurrent_multiplier"></a>6.1. Property `VsConverter > VsConverter.maxValveCurrent > multiplier`

|                |                       |
| -------------- | --------------------- |
| **Type**       | `enum (of string)`    |
| **Required**   | No                    |
| **Default**    | `"none"`              |
| **Defined in** | ./UnitMultiplier.json |

**Description:** nan

Must be one of:
* "p"
* "n"
* "micro"
* "m"
* "c"
* "d"
* "k"
* "M"
* "G"
* "T"
* "none"
* "y"
* "z"
* "a"
* "f"
* "da"
* "h"
* "P"
* "E"
* "Z"
* "Y"

### <a name="VsConvertermaxValveCurrent_unit"></a>6.2. Property `VsConverter > VsConverter.maxValveCurrent > unit`

|                |                    |
| -------------- | ------------------ |
| **Type**       | `enum (of string)` |
| **Required**   | No                 |
| **Default**    | `"A"`              |
| **Defined in** | ./UnitSymbol.json  |

**Description:** nan

Must be one of:
* "none"
* "m"
* "kg"
* "s"
* "A"
* "K"
* "mol"
* "cd"
* "deg"
* "rad"
* "sr"
* "Gy"
* "Bq"
* "degC"
* "Sv"
* "F"
* "C"
* "S"
* "H"
* "V"
* "ohm"
* "J"
* "N"
* "Hz"
* "lx"
* "lm"
* "Wb"
* "T"
* "W"
* "Pa"
* "m2"
* "m3"
* "mPers"
* "mPers2"
* "m3Pers"
* "mPerm3"
* "kgm"
* "kgPerm3"
* "WPermK"
* "JPerK"
* "ppm"
* "rotPers"
* "radPers"
* "VA"
* "VAr"
* "cosPhi"
* "Vs"
* "V2"
* "As"
* "A2"
* "A2s"
* "VAh"
* "Wh"
* "VArh"
* "VPerHz"
* "HzPers"
* "character"
* "charPers"
* "kgm2"
* "dB"
* "WPers"
* "lPers"
* "dBm"
* "h"
* "min"
* "Q"
* "Qh"
* "ohmm"
* "APerm"
* "V2h"
* "A2h"
* "Ah"
* "count"
* "ft3"
* "m3Perh"
* "gal"
* "Btu"
* "l"
* "lPerh"
* "lPerl"
* "gPerg"
* "molPerm3"
* "molPermol"
* "molPerkg"
* "sPers"
* "HzPerHz"
* "VPerV"
* "APerA"
* "VPerVA"
* "rev"
* "kat"
* "JPerkg"
* "m3Uncompensated"
* "m3Compensated"
* "WPerW"
* "therm"
* "onePerm"
* "m3Perkg"
* "Pas"
* "Nm"
* "NPerm"
* "radPers2"
* "WPerm2"
* "JPerkgK"
* "JPerm3"
* "VPerm"
* "CPerm3"
* "CPerm2"
* "FPerm"
* "HPerm"
* "JPermol"
* "JPermolK"
* "CPerkg"
* "GyPers"
* "WPersr"
* "WPerm2sr"
* "katPerm3"
* "d"
* "anglemin"
* "anglesec"
* "ha"
* "tonne"
* "bar"
* "mmHg"
* "M"
* "kn"
* "Vh"
* "Mx"
* "G"
* "Oe"
* "WPerA"
* "SPerm"
* "onePerHz"
* "VPerVAr"
* "ohmPerm"
* "kgPerJ"
* "JPers"
* "m2Pers"
* "JPerm2"
* "KPers"
* "PaPers"

### <a name="VsConvertermaxValveCurrent_value"></a>6.3. Property `VsConverter > VsConverter.maxValveCurrent > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="ACDCConverterp"></a>7. Property `VsConverter > ACDCConverter.p`

**Title:** p

|                |                    |
| -------------- | ------------------ |
| **Type**       | `object or number` |
| **Required**   | No                 |
| **Defined in** | ./ActivePower.json |

**Description:** Active power at the point of common coupling. Load sign convention is used, i.e. positive sign means flow out from a node.
Starting value for a steady state solution in the case a simplified power flow model is used.

| Property                                    | Pattern | Type             | Deprecated | Definition                                                    | Title/Description |
| ------------------------------------------- | ------- | ---------------- | ---------- | ------------------------------------------------------------- | ----------------- |
| - [multiplier](#ACDCConverterp_multiplier ) | No      | enum (of string) | No         | Same as [multiplier](#VsConvertermaxValveCurrent_multiplier ) | nan               |
| - [unit](#ACDCConverterp_unit )             | No      | enum (of string) | No         | Same as [unit](#VsConvertermaxValveCurrent_unit )             | nan               |
| - [value](#ACDCConverterp_value )           | No      | number           | No         | -                                                             | nan               |

### <a name="ACDCConverterp_multiplier"></a>7.1. Property `VsConverter > ACDCConverter.p > multiplier`

|                        |                                                      |
| ---------------------- | ---------------------------------------------------- |
| **Type**               | `enum (of string)`                                   |
| **Required**           | No                                                   |
| **Default**            | `"none"`                                             |
| **Same definition as** | [multiplier](#VsConvertermaxValveCurrent_multiplier) |

**Description:** nan

### <a name="ACDCConverterp_unit"></a>7.2. Property `VsConverter > ACDCConverter.p > unit`

|                        |                                          |
| ---------------------- | ---------------------------------------- |
| **Type**               | `enum (of string)`                       |
| **Required**           | No                                       |
| **Default**            | `"W"`                                    |
| **Same definition as** | [unit](#VsConvertermaxValveCurrent_unit) |

**Description:** nan

### <a name="ACDCConverterp_value"></a>7.3. Property `VsConverter > ACDCConverter.p > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="ACDCConverterq"></a>8. Property `VsConverter > ACDCConverter.q`

**Title:** q

|                |                      |
| -------------- | -------------------- |
| **Type**       | `object or number`   |
| **Required**   | No                   |
| **Defined in** | ./ReactivePower.json |

**Description:** Reactive power at the point of common coupling. Load sign convention is used, i.e. positive sign means flow out from a node.
Starting value for a steady state solution in the case a simplified power flow model is used.

| Property                                    | Pattern | Type             | Deprecated | Definition                                                    | Title/Description |
| ------------------------------------------- | ------- | ---------------- | ---------- | ------------------------------------------------------------- | ----------------- |
| - [multiplier](#ACDCConverterq_multiplier ) | No      | enum (of string) | No         | Same as [multiplier](#VsConvertermaxValveCurrent_multiplier ) | nan               |
| - [unit](#ACDCConverterq_unit )             | No      | enum (of string) | No         | Same as [unit](#VsConvertermaxValveCurrent_unit )             | nan               |
| - [value](#ACDCConverterq_value )           | No      | number           | No         | -                                                             | nan               |

### <a name="ACDCConverterq_multiplier"></a>8.1. Property `VsConverter > ACDCConverter.q > multiplier`

|                        |                                                      |
| ---------------------- | ---------------------------------------------------- |
| **Type**               | `enum (of string)`                                   |
| **Required**           | No                                                   |
| **Default**            | `"none"`                                             |
| **Same definition as** | [multiplier](#VsConvertermaxValveCurrent_multiplier) |

**Description:** nan

### <a name="ACDCConverterq_unit"></a>8.2. Property `VsConverter > ACDCConverter.q > unit`

|                        |                                          |
| ---------------------- | ---------------------------------------- |
| **Type**               | `enum (of string)`                       |
| **Required**           | No                                       |
| **Default**            | `"VAr"`                                  |
| **Same definition as** | [unit](#VsConvertermaxValveCurrent_unit) |

**Description:** nan

### <a name="ACDCConverterq_value"></a>8.3. Property `VsConverter > ACDCConverter.q > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="IdentifiedObjectdescription"></a>9. Property `VsConverter > IdentifiedObject.description`

**Title:** description

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The description is a free human readable text describing or naming the object. It may be non unique and may not correlate to a naming hierarchy.

## <a name="ACDCConverterminP"></a>10. Property `VsConverter > ACDCConverter.minP`

**Title:** minP

|                        |                                    |
| ---------------------- | ---------------------------------- |
| **Type**               | `object or number`                 |
| **Required**           | No                                 |
| **Same definition as** | [ACDCConverter.p](#ACDCConverterp) |

**Description:** Minimum active power limit. The value is overwritten by values of VsCapabilityCurve, if present.

## <a name="Equipmentaggregate"></a>11. Property `VsConverter > Equipment.aggregate`

**Title:** aggregate

|              |           |
| ------------ | --------- |
| **Type**     | `boolean` |
| **Required** | No        |

**Description:** The aggregate flag provides an alternative way of representing an aggregated (equivalent) element. It is applicable in cases when the dedicated classes for equivalent equipment do not have all of the attributes necessary to represent the required level of detail.  In case the flag is set to “true” the single instance of equipment represents multiple pieces of equipment that have been modelled together as an aggregate equivalent obtained by a network reduction procedure. Examples would be power transformers or synchronous machines operating in parallel modelled as a single aggregate power transformer or aggregate synchronous machine.  
The attribute is not used for EquivalentBranch, EquivalentShunt and EquivalentInjection.

## <a name="EquipmentnetworkAnalysisEnabled"></a>12. Property `VsConverter > Equipment.networkAnalysisEnabled`

**Title:** networkAnalysisEnabled

|              |           |
| ------------ | --------- |
| **Type**     | `boolean` |
| **Required** | No        |

**Description:** The equipment is enabled to participate in network analysis.  If unspecified, the value is assumed to be true.

## <a name="ACDCConverterratedUdc"></a>13. Property `VsConverter > ACDCConverter.ratedUdc`

**Title:** ratedUdc

|                |                    |
| -------------- | ------------------ |
| **Type**       | `object or number` |
| **Required**   | No                 |
| **Defined in** | ./Voltage.json     |

**Description:** Rated converter DC voltage, also called UdN. The attribute shall be a positive value. It is converter’s configuration data used in power flow. For instance a bipolar HVDC link with value  200 kV has a 400kV difference between the dc lines.

| Property                                           | Pattern | Type             | Deprecated | Definition                                                    | Title/Description |
| -------------------------------------------------- | ------- | ---------------- | ---------- | ------------------------------------------------------------- | ----------------- |
| - [multiplier](#ACDCConverterratedUdc_multiplier ) | No      | enum (of string) | No         | Same as [multiplier](#VsConvertermaxValveCurrent_multiplier ) | nan               |
| - [unit](#ACDCConverterratedUdc_unit )             | No      | enum (of string) | No         | Same as [unit](#VsConvertermaxValveCurrent_unit )             | nan               |
| - [value](#ACDCConverterratedUdc_value )           | No      | number           | No         | -                                                             | nan               |

### <a name="ACDCConverterratedUdc_multiplier"></a>13.1. Property `VsConverter > ACDCConverter.ratedUdc > multiplier`

|                        |                                                      |
| ---------------------- | ---------------------------------------------------- |
| **Type**               | `enum (of string)`                                   |
| **Required**           | No                                                   |
| **Default**            | `"none"`                                             |
| **Same definition as** | [multiplier](#VsConvertermaxValveCurrent_multiplier) |

**Description:** nan

### <a name="ACDCConverterratedUdc_unit"></a>13.2. Property `VsConverter > ACDCConverter.ratedUdc > unit`

|                        |                                          |
| ---------------------- | ---------------------------------------- |
| **Type**               | `enum (of string)`                       |
| **Required**           | No                                       |
| **Default**            | `"V"`                                    |
| **Same definition as** | [unit](#VsConvertermaxValveCurrent_unit) |

**Description:** nan

### <a name="ACDCConverterratedUdc_value"></a>13.3. Property `VsConverter > ACDCConverter.ratedUdc > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="EquipmentnormallyInService"></a>14. Property `VsConverter > Equipment.normallyInService`

**Title:** normallyInService

|              |           |
| ------------ | --------- |
| **Type**     | `boolean` |
| **Required** | No        |

**Description:** Specifies the availability of the equipment under normal operating conditions. True means the equipment is available for topology processing, which determines if the equipment is energized or not. False means that the equipment is treated by network applications as if it is not in the model.

## <a name="VsConverterpPccControl"></a>15. Property `VsConverter > VsConverter.pPccControl`

**Title:** pPccControl

|                |                          |
| -------------- | ------------------------ |
| **Type**       | `enum (of string)`       |
| **Required**   | No                       |
| **Defined in** | ./VsPpccControlKind.json |

**Description:** Kind of control of real power and/or DC voltage.

Must be one of:
* "pPcc"
* "udc"
* "pPccAndUdcDroop"
* "pPccAndUdcDroopWithCompensation"
* "pPccAndUdcDroopPilot"
* "phasePcc"

## <a name="ACDCConverterbaseS"></a>16. Property `VsConverter > ACDCConverter.baseS`

**Title:** baseS

|                |                      |
| -------------- | -------------------- |
| **Type**       | `object or number`   |
| **Required**   | No                   |
| **Defined in** | ./ApparentPower.json |

**Description:** Base apparent power of the converter pole. The attribute shall be a positive value.

| Property                                        | Pattern | Type             | Deprecated | Definition                                                    | Title/Description |
| ----------------------------------------------- | ------- | ---------------- | ---------- | ------------------------------------------------------------- | ----------------- |
| - [multiplier](#ACDCConverterbaseS_multiplier ) | No      | enum (of string) | No         | Same as [multiplier](#VsConvertermaxValveCurrent_multiplier ) | nan               |
| - [unit](#ACDCConverterbaseS_unit )             | No      | enum (of string) | No         | Same as [unit](#VsConvertermaxValveCurrent_unit )             | nan               |
| - [value](#ACDCConverterbaseS_value )           | No      | number           | No         | -                                                             | nan               |

### <a name="ACDCConverterbaseS_multiplier"></a>16.1. Property `VsConverter > ACDCConverter.baseS > multiplier`

|                        |                                                      |
| ---------------------- | ---------------------------------------------------- |
| **Type**               | `enum (of string)`                                   |
| **Required**           | No                                                   |
| **Default**            | `"none"`                                             |
| **Same definition as** | [multiplier](#VsConvertermaxValveCurrent_multiplier) |

**Description:** nan

### <a name="ACDCConverterbaseS_unit"></a>16.2. Property `VsConverter > ACDCConverter.baseS > unit`

|                        |                                          |
| ---------------------- | ---------------------------------------- |
| **Type**               | `enum (of string)`                       |
| **Required**           | No                                       |
| **Default**            | `"VA"`                                   |
| **Same definition as** | [unit](#VsConvertermaxValveCurrent_unit) |

**Description:** nan

### <a name="ACDCConverterbaseS_value"></a>16.3. Property `VsConverter > ACDCConverter.baseS > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="ACDCConverterswitchingLoss"></a>17. Property `VsConverter > ACDCConverter.switchingLoss`

**Title:** switchingLoss

|                |                                  |
| -------------- | -------------------------------- |
| **Type**       | `object or number`               |
| **Required**   | No                               |
| **Defined in** | ./ActivePowerPerCurrentFlow.json |

**Description:** Switching losses, relative to the base apparent power 'baseS'. Refer to poleLossP. The attribute shall be a positive value.

| Property                                                | Pattern | Type             | Deprecated | Definition                                                    | Title/Description |
| ------------------------------------------------------- | ------- | ---------------- | ---------- | ------------------------------------------------------------- | ----------------- |
| - [multiplier](#ACDCConverterswitchingLoss_multiplier ) | No      | enum (of string) | No         | Same as [multiplier](#VsConvertermaxValveCurrent_multiplier ) | nan               |
| - [unit](#ACDCConverterswitchingLoss_unit )             | No      | enum (of string) | No         | Same as [unit](#VsConvertermaxValveCurrent_unit )             | nan               |
| - [value](#ACDCConverterswitchingLoss_value )           | No      | number           | No         | -                                                             | nan               |

### <a name="ACDCConverterswitchingLoss_multiplier"></a>17.1. Property `VsConverter > ACDCConverter.switchingLoss > multiplier`

|                        |                                                      |
| ---------------------- | ---------------------------------------------------- |
| **Type**               | `enum (of string)`                                   |
| **Required**           | No                                                   |
| **Default**            | `"none"`                                             |
| **Same definition as** | [multiplier](#VsConvertermaxValveCurrent_multiplier) |

**Description:** nan

### <a name="ACDCConverterswitchingLoss_unit"></a>17.2. Property `VsConverter > ACDCConverter.switchingLoss > unit`

|                        |                                          |
| ---------------------- | ---------------------------------------- |
| **Type**               | `enum (of string)`                       |
| **Required**           | No                                       |
| **Default**            | `"WPerA"`                                |
| **Same definition as** | [unit](#VsConvertermaxValveCurrent_unit) |

**Description:** nan

### <a name="ACDCConverterswitchingLoss_value"></a>17.3. Property `VsConverter > ACDCConverter.switchingLoss > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="EquipmentinService"></a>18. Property `VsConverter > Equipment.inService`

**Title:** inService

|              |           |
| ------------ | --------- |
| **Type**     | `boolean` |
| **Required** | No        |

**Description:** Specifies the availability of the equipment. True means the equipment is available for topology processing, which determines if the equipment is energized or not. False means that the equipment is treated by network applications as if it is not in the model.

## <a name="VsConverterqShare"></a>19. Property `VsConverter > VsConverter.qShare`

**Title:** qShare

|                |                    |
| -------------- | ------------------ |
| **Type**       | `object or number` |
| **Required**   | No                 |
| **Defined in** | ./PerCent.json     |

**Description:** Reactive power sharing factor among parallel converters on Uac control. The attribute shall be a positive value or zero.

| Property                                       | Pattern | Type             | Deprecated | Definition                                                    | Title/Description                    |
| ---------------------------------------------- | ------- | ---------------- | ---------- | ------------------------------------------------------------- | ------------------------------------ |
| - [multiplier](#VsConverterqShare_multiplier ) | No      | enum (of string) | No         | Same as [multiplier](#VsConvertermaxValveCurrent_multiplier ) | nan                                  |
| - [unit](#VsConverterqShare_unit )             | No      | enum (of string) | No         | Same as [unit](#VsConvertermaxValveCurrent_unit )             | nan                                  |
| - [value](#VsConverterqShare_value )           | No      | number           | No         | -                                                             | Normally 0 to 100 on a defined base. |

### <a name="VsConverterqShare_multiplier"></a>19.1. Property `VsConverter > VsConverter.qShare > multiplier`

|                        |                                                      |
| ---------------------- | ---------------------------------------------------- |
| **Type**               | `enum (of string)`                                   |
| **Required**           | No                                                   |
| **Default**            | `"none"`                                             |
| **Same definition as** | [multiplier](#VsConvertermaxValveCurrent_multiplier) |

**Description:** nan

### <a name="VsConverterqShare_unit"></a>19.2. Property `VsConverter > VsConverter.qShare > unit`

|                        |                                          |
| ---------------------- | ---------------------------------------- |
| **Type**               | `enum (of string)`                       |
| **Required**           | No                                       |
| **Default**            | `"none"`                                 |
| **Same definition as** | [unit](#VsConvertermaxValveCurrent_unit) |

**Description:** nan

### <a name="VsConverterqShare_value"></a>19.3. Property `VsConverter > VsConverter.qShare > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** Normally 0 to 100 on a defined base.

## <a name="ACDCConvertertargetPpcc"></a>20. Property `VsConverter > ACDCConverter.targetPpcc`

**Title:** targetPpcc

|                        |                                    |
| ---------------------- | ---------------------------------- |
| **Type**               | `object or number`                 |
| **Required**           | No                                 |
| **Same definition as** | [ACDCConverter.p](#ACDCConverterp) |

**Description:** Real power injection target in AC grid, at point of common coupling.  Load sign convention is used, i.e. positive sign means flow out from a node.

## <a name="VsConvertertargetQpcc"></a>21. Property `VsConverter > VsConverter.targetQpcc`

**Title:** targetQpcc

|                        |                                    |
| ---------------------- | ---------------------------------- |
| **Type**               | `object or number`                 |
| **Required**           | No                                 |
| **Same definition as** | [ACDCConverter.q](#ACDCConverterq) |

**Description:** Reactive power injection target in AC grid, at point of common coupling.  Load sign convention is used, i.e. positive sign means flow out from a node.

## <a name="ACDCConvertertargetUdc"></a>22. Property `VsConverter > ACDCConverter.targetUdc`

**Title:** targetUdc

|                        |                                                  |
| ---------------------- | ------------------------------------------------ |
| **Type**               | `object or number`                               |
| **Required**           | No                                               |
| **Same definition as** | [ACDCConverter.ratedUdc](#ACDCConverterratedUdc) |

**Description:** Target value for DC voltage magnitude. The attribute shall be a positive value.

## <a name="VsConvertertargetUpcc"></a>23. Property `VsConverter > VsConverter.targetUpcc`

**Title:** targetUpcc

|                        |                                                  |
| ---------------------- | ------------------------------------------------ |
| **Type**               | `object or number`                               |
| **Required**           | No                                               |
| **Same definition as** | [ACDCConverter.ratedUdc](#ACDCConverterratedUdc) |

**Description:** Voltage target in AC grid, at point of common coupling. The attribute shall be a positive value.

## <a name="VsConverterdroopCompensation"></a>24. Property `VsConverter > VsConverter.droopCompensation`

**Title:** droopCompensation

|                |                    |
| -------------- | ------------------ |
| **Type**       | `object or number` |
| **Required**   | No                 |
| **Defined in** | ./Resistance.json  |

**Description:** Compensation constant. Used to compensate for voltage drop when controlling voltage at a distant bus. The attribute shall be a positive value.

| Property                                                  | Pattern | Type             | Deprecated | Definition                                                    | Title/Description |
| --------------------------------------------------------- | ------- | ---------------- | ---------- | ------------------------------------------------------------- | ----------------- |
| - [multiplier](#VsConverterdroopCompensation_multiplier ) | No      | enum (of string) | No         | Same as [multiplier](#VsConvertermaxValveCurrent_multiplier ) | nan               |
| - [unit](#VsConverterdroopCompensation_unit )             | No      | enum (of string) | No         | Same as [unit](#VsConvertermaxValveCurrent_unit )             | nan               |
| - [value](#VsConverterdroopCompensation_value )           | No      | number           | No         | -                                                             | nan               |

### <a name="VsConverterdroopCompensation_multiplier"></a>24.1. Property `VsConverter > VsConverter.droopCompensation > multiplier`

|                        |                                                      |
| ---------------------- | ---------------------------------------------------- |
| **Type**               | `enum (of string)`                                   |
| **Required**           | No                                                   |
| **Default**            | `"none"`                                             |
| **Same definition as** | [multiplier](#VsConvertermaxValveCurrent_multiplier) |

**Description:** nan

### <a name="VsConverterdroopCompensation_unit"></a>24.2. Property `VsConverter > VsConverter.droopCompensation > unit`

|                        |                                          |
| ---------------------- | ---------------------------------------- |
| **Type**               | `enum (of string)`                       |
| **Required**           | No                                       |
| **Default**            | `"ohm"`                                  |
| **Same definition as** | [unit](#VsConvertermaxValveCurrent_unit) |

**Description:** nan

### <a name="VsConverterdroopCompensation_value"></a>24.3. Property `VsConverter > VsConverter.droopCompensation > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="VsConverterdroop"></a>25. Property `VsConverter > VsConverter.droop`

**Title:** droop

|                |                    |
| -------------- | ------------------ |
| **Type**       | `object or number` |
| **Required**   | No                 |
| **Defined in** | ./PU.json          |

**Description:** Droop constant. The pu value is obtained as D [kV/MW] x Sb / Ubdc. The attribute shall be a positive value.

| Property                                      | Pattern | Type             | Deprecated | Definition                                                    | Title/Description |
| --------------------------------------------- | ------- | ---------------- | ---------- | ------------------------------------------------------------- | ----------------- |
| - [multiplier](#VsConverterdroop_multiplier ) | No      | enum (of string) | No         | Same as [multiplier](#VsConvertermaxValveCurrent_multiplier ) | nan               |
| - [unit](#VsConverterdroop_unit )             | No      | enum (of string) | No         | Same as [unit](#VsConvertermaxValveCurrent_unit )             | nan               |
| - [value](#VsConverterdroop_value )           | No      | number           | No         | -                                                             | nan               |

### <a name="VsConverterdroop_multiplier"></a>25.1. Property `VsConverter > VsConverter.droop > multiplier`

|                        |                                                      |
| ---------------------- | ---------------------------------------------------- |
| **Type**               | `enum (of string)`                                   |
| **Required**           | No                                                   |
| **Default**            | `"none"`                                             |
| **Same definition as** | [multiplier](#VsConvertermaxValveCurrent_multiplier) |

**Description:** nan

### <a name="VsConverterdroop_unit"></a>25.2. Property `VsConverter > VsConverter.droop > unit`

|                        |                                          |
| ---------------------- | ---------------------------------------- |
| **Type**               | `enum (of string)`                       |
| **Required**           | No                                       |
| **Default**            | `"none"`                                 |
| **Same definition as** | [unit](#VsConvertermaxValveCurrent_unit) |

**Description:** nan

### <a name="VsConverterdroop_value"></a>25.3. Property `VsConverter > VsConverter.droop > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="VsConvertermaxModulationIndex"></a>26. Property `VsConverter > VsConverter.maxModulationIndex`

**Title:** maxModulationIndex

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |

**Description:** The maximum quotient between the AC converter voltage (Uc) and DC voltage (Ud). A factor typically less than 1. It is converter’s configuration data used in power flow.

## <a name="VsConverterqPccControl"></a>27. Property `VsConverter > VsConverter.qPccControl`

**Title:** qPccControl

|                |                          |
| -------------- | ------------------------ |
| **Type**       | `enum (of string)`       |
| **Required**   | No                       |
| **Defined in** | ./VsQpccControlKind.json |

**Description:** Kind of reactive power control.

Must be one of:
* "reactivePcc"
* "voltagePcc"
* "powerFactorPcc"
* "pulseWidthModulation"

## <a name="ACDCConvertervalveU0"></a>28. Property `VsConverter > ACDCConverter.valveU0`

**Title:** valveU0

|                        |                                                  |
| ---------------------- | ------------------------------------------------ |
| **Type**               | `object or number`                               |
| **Required**           | No                                               |
| **Same definition as** | [ACDCConverter.ratedUdc](#ACDCConverterratedUdc) |

**Description:** Valve threshold voltage, also called Uvalve. Forward voltage drop when the valve is conducting. Used in loss calculations, i.e. the switchLoss depend on numberOfValves * valveU0.

## <a name="VsConverterdelta"></a>29. Property `VsConverter > VsConverter.delta`

**Title:** delta

|                |                     |
| -------------- | ------------------- |
| **Type**       | `object or number`  |
| **Required**   | No                  |
| **Defined in** | ./AngleDegrees.json |

**Description:** Angle between VsConverter.uv and ACDCConverter.uc. It is converter’s state variable used in power flow. The attribute shall be a positive value or zero.

| Property                                      | Pattern | Type             | Deprecated | Definition                                                    | Title/Description |
| --------------------------------------------- | ------- | ---------------- | ---------- | ------------------------------------------------------------- | ----------------- |
| - [multiplier](#VsConverterdelta_multiplier ) | No      | enum (of string) | No         | Same as [multiplier](#VsConvertermaxValveCurrent_multiplier ) | nan               |
| - [unit](#VsConverterdelta_unit )             | No      | enum (of string) | No         | Same as [unit](#VsConvertermaxValveCurrent_unit )             | nan               |
| - [value](#VsConverterdelta_value )           | No      | number           | No         | -                                                             | nan               |

### <a name="VsConverterdelta_multiplier"></a>29.1. Property `VsConverter > VsConverter.delta > multiplier`

|                        |                                                      |
| ---------------------- | ---------------------------------------------------- |
| **Type**               | `enum (of string)`                                   |
| **Required**           | No                                                   |
| **Default**            | `"none"`                                             |
| **Same definition as** | [multiplier](#VsConvertermaxValveCurrent_multiplier) |

**Description:** nan

### <a name="VsConverterdelta_unit"></a>29.2. Property `VsConverter > VsConverter.delta > unit`

|                        |                                          |
| ---------------------- | ---------------------------------------- |
| **Type**               | `enum (of string)`                       |
| **Required**           | No                                       |
| **Default**            | `"deg"`                                  |
| **Same definition as** | [unit](#VsConvertermaxValveCurrent_unit) |

**Description:** nan

### <a name="VsConverterdelta_value"></a>29.3. Property `VsConverter > VsConverter.delta > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="ACDCConverteridc"></a>30. Property `VsConverter > ACDCConverter.idc`

**Title:** idc

|                        |                                                            |
| ---------------------- | ---------------------------------------------------------- |
| **Type**               | `object or number`                                         |
| **Required**           | No                                                         |
| **Same definition as** | [VsConverter.maxValveCurrent](#VsConvertermaxValveCurrent) |

**Description:** Converter DC current, also called Id. It is converter’s state variable, result from power flow.

## <a name="ACDCConverteridleLoss"></a>31. Property `VsConverter > ACDCConverter.idleLoss`

**Title:** idleLoss

|                        |                                    |
| ---------------------- | ---------------------------------- |
| **Type**               | `object or number`                 |
| **Required**           | No                                 |
| **Same definition as** | [ACDCConverter.p](#ACDCConverterp) |

**Description:** Active power loss in pole at no power transfer. It is converter’s configuration data used in power flow. The attribute shall be a positive value.

## <a name="ACDCConverternumberOfValves"></a>32. Property `VsConverter > ACDCConverter.numberOfValves`

**Title:** numberOfValves

|              |           |
| ------------ | --------- |
| **Type**     | `integer` |
| **Required** | No        |

**Description:** Number of valves in the converter. Used in loss calculations.

## <a name="ACDCConvertermaxUdc"></a>33. Property `VsConverter > ACDCConverter.maxUdc`

**Title:** maxUdc

|                        |                                                  |
| ---------------------- | ------------------------------------------------ |
| **Type**               | `object or number`                               |
| **Required**           | No                                               |
| **Same definition as** | [ACDCConverter.ratedUdc](#ACDCConverterratedUdc) |

**Description:** The maximum voltage on the DC side at which the converter should operate. It is converter’s configuration data used in power flow. The attribute shall be a positive value.

## <a name="VsConvertertargetPowerFactorPcc"></a>34. Property `VsConverter > VsConverter.targetPowerFactorPcc`

**Title:** targetPowerFactorPcc

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |

**Description:** Power factor target at the AC side, at point of common coupling. The attribute shall be a positive value.

## <a name="VsConvertertargetPhasePcc"></a>35. Property `VsConverter > VsConverter.targetPhasePcc`

**Title:** targetPhasePcc

|                        |                                        |
| ---------------------- | -------------------------------------- |
| **Type**               | `object or number`                     |
| **Required**           | No                                     |
| **Same definition as** | [VsConverter.delta](#VsConverterdelta) |

**Description:** Phase target at AC side, at point of common coupling. The attribute shall be a positive value.

## <a name="VsConvertertargetPWMfactor"></a>36. Property `VsConverter > VsConverter.targetPWMfactor`

**Title:** targetPWMfactor

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |

**Description:** Magnitude of pulse-modulation factor. The attribute shall be a positive value.

## <a name="ACDCConverterminUdc"></a>37. Property `VsConverter > ACDCConverter.minUdc`

**Title:** minUdc

|                        |                                                  |
| ---------------------- | ------------------------------------------------ |
| **Type**               | `object or number`                               |
| **Required**           | No                                               |
| **Same definition as** | [ACDCConverter.ratedUdc](#ACDCConverterratedUdc) |

**Description:** The minimum voltage on the DC side at which the converter should operate. It is converter’s configuration data used in power flow. The attribute shall be a positive value.

## <a name="ACDCConverterpoleLossP"></a>38. Property `VsConverter > ACDCConverter.poleLossP`

**Title:** poleLossP

|                        |                                    |
| ---------------------- | ---------------------------------- |
| **Type**               | `object or number`                 |
| **Required**           | No                                 |
| **Same definition as** | [ACDCConverter.p](#ACDCConverterp) |

**Description:** The active power loss at a DC Pole 
= idleLoss + switchingLoss*|Idc| + resitiveLoss*Idc^2.
For lossless operation Pdc=Pac.
For rectifier operation with losses Pdc=Pac-lossP.
For inverter operation with losses Pdc=Pac+lossP.
It is converter’s state variable used in power flow. The attribute shall be a positive value.

## <a name="ACDCConverterresistiveLoss"></a>39. Property `VsConverter > ACDCConverter.resistiveLoss`

**Title:** resistiveLoss

|                        |                                                                |
| ---------------------- | -------------------------------------------------------------- |
| **Type**               | `object or number`                                             |
| **Required**           | No                                                             |
| **Same definition as** | [VsConverter.droopCompensation](#VsConverterdroopCompensation) |

**Description:** It is converter’s configuration data used in power flow. Refer to poleLossP. The attribute shall be a positive value.

## <a name="ACDCConvertermaxP"></a>40. Property `VsConverter > ACDCConverter.maxP`

**Title:** maxP

|                        |                                    |
| ---------------------- | ---------------------------------- |
| **Type**               | `object or number`                 |
| **Required**           | No                                 |
| **Same definition as** | [ACDCConverter.p](#ACDCConverterp) |

**Description:** Maximum active power limit. The value is overwritten by values of VsCapabilityCurve, if present.

## <a name="ACDCConverteruc"></a>41. Property `VsConverter > ACDCConverter.uc`

**Title:** uc

|                        |                                                  |
| ---------------------- | ------------------------------------------------ |
| **Type**               | `object or number`                               |
| **Required**           | No                                               |
| **Same definition as** | [ACDCConverter.ratedUdc](#ACDCConverterratedUdc) |

**Description:** Line-to-line converter voltage, the voltage at the AC side of the valve. It is converter’s state variable, result from power flow. The attribute shall be a positive value.

## <a name="ACDCConverterudc"></a>42. Property `VsConverter > ACDCConverter.udc`

**Title:** udc

|                        |                                                  |
| ---------------------- | ------------------------------------------------ |
| **Type**               | `object or number`                               |
| **Required**           | No                                               |
| **Same definition as** | [ACDCConverter.ratedUdc](#ACDCConverterratedUdc) |

**Description:** Converter voltage at the DC side, also called Ud. It is converter’s state variable, result from power flow. The attribute shall be a positive value.

## <a name="VsConverteruv"></a>43. Property `VsConverter > VsConverter.uv`

**Title:** uv

|                        |                                                  |
| ---------------------- | ------------------------------------------------ |
| **Type**               | `object or number`                               |
| **Required**           | No                                               |
| **Same definition as** | [ACDCConverter.ratedUdc](#ACDCConverterratedUdc) |

**Description:** Line-to-line voltage on the valve side of the converter transformer. It is converter’s state variable, result from power flow. The attribute shall be a positive value.

## <a name="IdentifiedObjectaliasName"></a>44. Property `VsConverter > IdentifiedObject.aliasName`

**Title:** aliasName

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The aliasName is free text human readable name of the object alternative to IdentifiedObject.name. It may be non unique and may not correlate to a naming hierarchy.
The attribute aliasName is retained because of backwards compatibility between CIM relases. It is however recommended to replace aliasName with the Name class as aliasName is planned for retirement at a future time.

## <a name="IdentifiedObjectmRID"></a>45. Property `VsConverter > IdentifiedObject.mRID`

**Title:** mRID

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** Master resource identifier issued by a model authority. The mRID is unique within an exchange context. Global uniqueness is easily achieved by using a UUID, as specified in RFC 4122, for the mRID. The use of UUID is strongly recommended.
For CIMXML data files in RDF syntax conforming to IEC 61970-552, the mRID is mapped to rdf:ID or rdf:about attributes that identify CIM object elements.

## <a name="IdentifiedObjectname"></a>46. Property `VsConverter > IdentifiedObject.name`

**Title:** name

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The name is any free human readable and possibly non unique text naming the object.

----------------------------------------------------------------------------------------------------------------------------
Generated using [json-schema-for-humans](https://github.com/coveooss/json-schema-for-humans) on 2024-04-10 at 07:14:27 -0600
