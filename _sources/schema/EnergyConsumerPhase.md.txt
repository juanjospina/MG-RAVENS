# EnergyConsumerPhase

- [1. Property `EnergyConsumerPhase > EnergyConsumerPhase.p`](#EnergyConsumerPhasep)
  - [1.1. Property `EnergyConsumerPhase > EnergyConsumerPhase.p > multiplier`](#EnergyConsumerPhasep_multiplier)
  - [1.2. Property `EnergyConsumerPhase > EnergyConsumerPhase.p > unit`](#EnergyConsumerPhasep_unit)
  - [1.3. Property `EnergyConsumerPhase > EnergyConsumerPhase.p > value`](#EnergyConsumerPhasep_value)
- [2. Property `EnergyConsumerPhase > EnergyConsumerPhase.pfixed`](#EnergyConsumerPhasepfixed)
- [3. Property `EnergyConsumerPhase > EnergyConsumerPhase.pfixedPct`](#EnergyConsumerPhasepfixedPct)
  - [3.1. Property `EnergyConsumerPhase > EnergyConsumerPhase.pfixedPct > multiplier`](#EnergyConsumerPhasepfixedPct_multiplier)
  - [3.2. Property `EnergyConsumerPhase > EnergyConsumerPhase.pfixedPct > unit`](#EnergyConsumerPhasepfixedPct_unit)
  - [3.3. Property `EnergyConsumerPhase > EnergyConsumerPhase.pfixedPct > value`](#EnergyConsumerPhasepfixedPct_value)
- [4. Property `EnergyConsumerPhase > EnergyConsumerPhase.phase`](#EnergyConsumerPhasephase)
- [5. Property `EnergyConsumerPhase > EnergyConsumerPhase.qfixed`](#EnergyConsumerPhaseqfixed)
  - [5.1. Property `EnergyConsumerPhase > EnergyConsumerPhase.qfixed > multiplier`](#EnergyConsumerPhaseqfixed_multiplier)
  - [5.2. Property `EnergyConsumerPhase > EnergyConsumerPhase.qfixed > unit`](#EnergyConsumerPhaseqfixed_unit)
  - [5.3. Property `EnergyConsumerPhase > EnergyConsumerPhase.qfixed > value`](#EnergyConsumerPhaseqfixed_value)
- [6. Property `EnergyConsumerPhase > EnergyConsumerPhase.qfixedPct`](#EnergyConsumerPhaseqfixedPct)
- [7. Property `EnergyConsumerPhase > EnergyConsumerPhase.q`](#EnergyConsumerPhaseq)
- [8. Property `EnergyConsumerPhase > IdentifiedObject.description`](#IdentifiedObjectdescription)
- [9. Property `EnergyConsumerPhase > IdentifiedObject.aliasName`](#IdentifiedObjectaliasName)
- [10. Property `EnergyConsumerPhase > IdentifiedObject.mRID`](#IdentifiedObjectmRID)
- [11. Property `EnergyConsumerPhase > IdentifiedObject.name`](#IdentifiedObjectname)

**Title:** EnergyConsumerPhase

|                           |                                                                           |
| ------------------------- | ------------------------------------------------------------------------- |
| **Type**                  | `object`                                                                  |
| **Required**              | No                                                                        |
| **Additional properties** | [[Any type: allowed]](# "Additional Properties of any type are allowed.") |

**Description:** A single phase of an energy consumer.

| Property                                                          | Pattern | Type             | Deprecated | Definition                                                              | Title/Description |
| ----------------------------------------------------------------- | ------- | ---------------- | ---------- | ----------------------------------------------------------------------- | ----------------- |
| - [EnergyConsumerPhase.p](#EnergyConsumerPhasep )                 | No      | object or number | No         | In ./ActivePower.json                                                   | p                 |
| - [EnergyConsumerPhase.pfixed](#EnergyConsumerPhasepfixed )       | No      | object or number | No         | Same as [EnergyConsumerPhase.p](#EnergyConsumerPhasep )                 | pfixed            |
| - [EnergyConsumerPhase.pfixedPct](#EnergyConsumerPhasepfixedPct ) | No      | object or number | No         | In ./PerCent.json                                                       | pfixedPct         |
| - [EnergyConsumerPhase.phase](#EnergyConsumerPhasephase )         | No      | enum (of string) | No         | In ./SinglePhaseKind.json                                               | phase             |
| - [EnergyConsumerPhase.qfixed](#EnergyConsumerPhaseqfixed )       | No      | object or number | No         | In ./ReactivePower.json                                                 | qfixed            |
| - [EnergyConsumerPhase.qfixedPct](#EnergyConsumerPhaseqfixedPct ) | No      | object or number | No         | Same as [EnergyConsumerPhase.pfixedPct](#EnergyConsumerPhasepfixedPct ) | qfixedPct         |
| - [EnergyConsumerPhase.q](#EnergyConsumerPhaseq )                 | No      | object or number | No         | Same as [EnergyConsumerPhase.qfixed](#EnergyConsumerPhaseqfixed )       | q                 |
| - [IdentifiedObject.description](#IdentifiedObjectdescription )   | No      | string           | No         | -                                                                       | description       |
| - [IdentifiedObject.aliasName](#IdentifiedObjectaliasName )       | No      | string           | No         | -                                                                       | aliasName         |
| - [IdentifiedObject.mRID](#IdentifiedObjectmRID )                 | No      | string           | No         | -                                                                       | mRID              |
| - [IdentifiedObject.name](#IdentifiedObjectname )                 | No      | string           | No         | -                                                                       | name              |

## <a name="EnergyConsumerPhasep"></a>1. Property `EnergyConsumerPhase > EnergyConsumerPhase.p`

**Title:** p

|                |                    |
| -------------- | ------------------ |
| **Type**       | `object or number` |
| **Required**   | No                 |
| **Defined in** | ./ActivePower.json |

**Description:** Active power of the load. Load sign convention is used, i.e. positive sign means flow out from a node.
For voltage dependent loads the value is at rated voltage.
Starting value for a steady state solution.

| Property                                          | Pattern | Type             | Deprecated | Definition               | Title/Description |
| ------------------------------------------------- | ------- | ---------------- | ---------- | ------------------------ | ----------------- |
| - [multiplier](#EnergyConsumerPhasep_multiplier ) | No      | enum (of string) | No         | In ./UnitMultiplier.json | nan               |
| - [unit](#EnergyConsumerPhasep_unit )             | No      | enum (of string) | No         | In ./UnitSymbol.json     | nan               |
| - [value](#EnergyConsumerPhasep_value )           | No      | number           | No         | -                        | nan               |

### <a name="EnergyConsumerPhasep_multiplier"></a>1.1. Property `EnergyConsumerPhase > EnergyConsumerPhase.p > multiplier`

|                |                       |
| -------------- | --------------------- |
| **Type**       | `enum (of string)`    |
| **Required**   | No                    |
| **Default**    | `"none"`              |
| **Defined in** | ./UnitMultiplier.json |

**Description:** nan

Must be one of:
* "p"
* "n"
* "micro"
* "m"
* "c"
* "d"
* "k"
* "M"
* "G"
* "T"
* "none"
* "y"
* "z"
* "a"
* "f"
* "da"
* "h"
* "P"
* "E"
* "Z"
* "Y"

### <a name="EnergyConsumerPhasep_unit"></a>1.2. Property `EnergyConsumerPhase > EnergyConsumerPhase.p > unit`

|                |                    |
| -------------- | ------------------ |
| **Type**       | `enum (of string)` |
| **Required**   | No                 |
| **Default**    | `"W"`              |
| **Defined in** | ./UnitSymbol.json  |

**Description:** nan

Must be one of:
* "none"
* "m"
* "kg"
* "s"
* "A"
* "K"
* "mol"
* "cd"
* "deg"
* "rad"
* "sr"
* "Gy"
* "Bq"
* "degC"
* "Sv"
* "F"
* "C"
* "S"
* "H"
* "V"
* "ohm"
* "J"
* "N"
* "Hz"
* "lx"
* "lm"
* "Wb"
* "T"
* "W"
* "Pa"
* "m2"
* "m3"
* "mPers"
* "mPers2"
* "m3Pers"
* "mPerm3"
* "kgm"
* "kgPerm3"
* "WPermK"
* "JPerK"
* "ppm"
* "rotPers"
* "radPers"
* "VA"
* "VAr"
* "cosPhi"
* "Vs"
* "V2"
* "As"
* "A2"
* "A2s"
* "VAh"
* "Wh"
* "VArh"
* "VPerHz"
* "HzPers"
* "character"
* "charPers"
* "kgm2"
* "dB"
* "WPers"
* "lPers"
* "dBm"
* "h"
* "min"
* "Q"
* "Qh"
* "ohmm"
* "APerm"
* "V2h"
* "A2h"
* "Ah"
* "count"
* "ft3"
* "m3Perh"
* "gal"
* "Btu"
* "l"
* "lPerh"
* "lPerl"
* "gPerg"
* "molPerm3"
* "molPermol"
* "molPerkg"
* "sPers"
* "HzPerHz"
* "VPerV"
* "APerA"
* "VPerVA"
* "rev"
* "kat"
* "JPerkg"
* "m3Uncompensated"
* "m3Compensated"
* "WPerW"
* "therm"
* "onePerm"
* "m3Perkg"
* "Pas"
* "Nm"
* "NPerm"
* "radPers2"
* "WPerm2"
* "JPerkgK"
* "JPerm3"
* "VPerm"
* "CPerm3"
* "CPerm2"
* "FPerm"
* "HPerm"
* "JPermol"
* "JPermolK"
* "CPerkg"
* "GyPers"
* "WPersr"
* "WPerm2sr"
* "katPerm3"
* "d"
* "anglemin"
* "anglesec"
* "ha"
* "tonne"
* "bar"
* "mmHg"
* "M"
* "kn"
* "Vh"
* "Mx"
* "G"
* "Oe"
* "WPerA"
* "SPerm"
* "onePerHz"
* "VPerVAr"
* "ohmPerm"
* "kgPerJ"
* "JPers"
* "m2Pers"
* "JPerm2"
* "KPers"
* "PaPers"

### <a name="EnergyConsumerPhasep_value"></a>1.3. Property `EnergyConsumerPhase > EnergyConsumerPhase.p > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="EnergyConsumerPhasepfixed"></a>2. Property `EnergyConsumerPhase > EnergyConsumerPhase.pfixed`

**Title:** pfixed

|                        |                                                |
| ---------------------- | ---------------------------------------------- |
| **Type**               | `object or number`                             |
| **Required**           | No                                             |
| **Same definition as** | [EnergyConsumerPhase.p](#EnergyConsumerPhasep) |

**Description:** Active power of the load that is a fixed quantity. Load sign convention is used, i.e. positive sign means flow out from a node.

## <a name="EnergyConsumerPhasepfixedPct"></a>3. Property `EnergyConsumerPhase > EnergyConsumerPhase.pfixedPct`

**Title:** pfixedPct

|                |                    |
| -------------- | ------------------ |
| **Type**       | `object or number` |
| **Required**   | No                 |
| **Defined in** | ./PerCent.json     |

**Description:** Fixed active power as per cent of load group fixed active power. Load sign convention is used, i.e. positive sign means flow out from a node.

| Property                                                  | Pattern | Type             | Deprecated | Definition                                              | Title/Description                    |
| --------------------------------------------------------- | ------- | ---------------- | ---------- | ------------------------------------------------------- | ------------------------------------ |
| - [multiplier](#EnergyConsumerPhasepfixedPct_multiplier ) | No      | enum (of string) | No         | Same as [multiplier](#EnergyConsumerPhasep_multiplier ) | nan                                  |
| - [unit](#EnergyConsumerPhasepfixedPct_unit )             | No      | enum (of string) | No         | Same as [unit](#EnergyConsumerPhasep_unit )             | nan                                  |
| - [value](#EnergyConsumerPhasepfixedPct_value )           | No      | number           | No         | -                                                       | Normally 0 to 100 on a defined base. |

### <a name="EnergyConsumerPhasepfixedPct_multiplier"></a>3.1. Property `EnergyConsumerPhase > EnergyConsumerPhase.pfixedPct > multiplier`

|                        |                                                |
| ---------------------- | ---------------------------------------------- |
| **Type**               | `enum (of string)`                             |
| **Required**           | No                                             |
| **Default**            | `"none"`                                       |
| **Same definition as** | [multiplier](#EnergyConsumerPhasep_multiplier) |

**Description:** nan

### <a name="EnergyConsumerPhasepfixedPct_unit"></a>3.2. Property `EnergyConsumerPhase > EnergyConsumerPhase.pfixedPct > unit`

|                        |                                    |
| ---------------------- | ---------------------------------- |
| **Type**               | `enum (of string)`                 |
| **Required**           | No                                 |
| **Default**            | `"none"`                           |
| **Same definition as** | [unit](#EnergyConsumerPhasep_unit) |

**Description:** nan

### <a name="EnergyConsumerPhasepfixedPct_value"></a>3.3. Property `EnergyConsumerPhase > EnergyConsumerPhase.pfixedPct > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** Normally 0 to 100 on a defined base.

## <a name="EnergyConsumerPhasephase"></a>4. Property `EnergyConsumerPhase > EnergyConsumerPhase.phase`

**Title:** phase

|                |                        |
| -------------- | ---------------------- |
| **Type**       | `enum (of string)`     |
| **Required**   | No                     |
| **Defined in** | ./SinglePhaseKind.json |

**Description:** Phase of this energy consumer component.   If the energy consumer is wye connected, the connection is from the indicated phase to the central ground or neutral point.  If the energy consumer is delta connected, the phase indicates an energy consumer connected from the indicated phase to the next logical non-neutral phase.

Must be one of:
* "A"
* "B"
* "C"
* "N"
* "s1"
* "s2"

## <a name="EnergyConsumerPhaseqfixed"></a>5. Property `EnergyConsumerPhase > EnergyConsumerPhase.qfixed`

**Title:** qfixed

|                |                      |
| -------------- | -------------------- |
| **Type**       | `object or number`   |
| **Required**   | No                   |
| **Defined in** | ./ReactivePower.json |

**Description:** Reactive power of the load that is a fixed quantity. Load sign convention is used, i.e. positive sign means flow out from a node.

| Property                                               | Pattern | Type             | Deprecated | Definition                                              | Title/Description |
| ------------------------------------------------------ | ------- | ---------------- | ---------- | ------------------------------------------------------- | ----------------- |
| - [multiplier](#EnergyConsumerPhaseqfixed_multiplier ) | No      | enum (of string) | No         | Same as [multiplier](#EnergyConsumerPhasep_multiplier ) | nan               |
| - [unit](#EnergyConsumerPhaseqfixed_unit )             | No      | enum (of string) | No         | Same as [unit](#EnergyConsumerPhasep_unit )             | nan               |
| - [value](#EnergyConsumerPhaseqfixed_value )           | No      | number           | No         | -                                                       | nan               |

### <a name="EnergyConsumerPhaseqfixed_multiplier"></a>5.1. Property `EnergyConsumerPhase > EnergyConsumerPhase.qfixed > multiplier`

|                        |                                                |
| ---------------------- | ---------------------------------------------- |
| **Type**               | `enum (of string)`                             |
| **Required**           | No                                             |
| **Default**            | `"none"`                                       |
| **Same definition as** | [multiplier](#EnergyConsumerPhasep_multiplier) |

**Description:** nan

### <a name="EnergyConsumerPhaseqfixed_unit"></a>5.2. Property `EnergyConsumerPhase > EnergyConsumerPhase.qfixed > unit`

|                        |                                    |
| ---------------------- | ---------------------------------- |
| **Type**               | `enum (of string)`                 |
| **Required**           | No                                 |
| **Default**            | `"VAr"`                            |
| **Same definition as** | [unit](#EnergyConsumerPhasep_unit) |

**Description:** nan

### <a name="EnergyConsumerPhaseqfixed_value"></a>5.3. Property `EnergyConsumerPhase > EnergyConsumerPhase.qfixed > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="EnergyConsumerPhaseqfixedPct"></a>6. Property `EnergyConsumerPhase > EnergyConsumerPhase.qfixedPct`

**Title:** qfixedPct

|                        |                                                                |
| ---------------------- | -------------------------------------------------------------- |
| **Type**               | `object or number`                                             |
| **Required**           | No                                                             |
| **Same definition as** | [EnergyConsumerPhase.pfixedPct](#EnergyConsumerPhasepfixedPct) |

**Description:** Fixed reactive power as per cent of load group fixed reactive power. Load sign convention is used, i.e. positive sign means flow out from a node.

## <a name="EnergyConsumerPhaseq"></a>7. Property `EnergyConsumerPhase > EnergyConsumerPhase.q`

**Title:** q

|                        |                                                          |
| ---------------------- | -------------------------------------------------------- |
| **Type**               | `object or number`                                       |
| **Required**           | No                                                       |
| **Same definition as** | [EnergyConsumerPhase.qfixed](#EnergyConsumerPhaseqfixed) |

**Description:** Reactive power of the load. Load sign convention is used, i.e. positive sign means flow out from a node.
For voltage dependent loads the value is at rated voltage.
Starting value for a steady state solution.

## <a name="IdentifiedObjectdescription"></a>8. Property `EnergyConsumerPhase > IdentifiedObject.description`

**Title:** description

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The description is a free human readable text describing or naming the object. It may be non unique and may not correlate to a naming hierarchy.

## <a name="IdentifiedObjectaliasName"></a>9. Property `EnergyConsumerPhase > IdentifiedObject.aliasName`

**Title:** aliasName

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The aliasName is free text human readable name of the object alternative to IdentifiedObject.name. It may be non unique and may not correlate to a naming hierarchy.
The attribute aliasName is retained because of backwards compatibility between CIM relases. It is however recommended to replace aliasName with the Name class as aliasName is planned for retirement at a future time.

## <a name="IdentifiedObjectmRID"></a>10. Property `EnergyConsumerPhase > IdentifiedObject.mRID`

**Title:** mRID

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** Master resource identifier issued by a model authority. The mRID is unique within an exchange context. Global uniqueness is easily achieved by using a UUID, as specified in RFC 4122, for the mRID. The use of UUID is strongly recommended.
For CIMXML data files in RDF syntax conforming to IEC 61970-552, the mRID is mapped to rdf:ID or rdf:about attributes that identify CIM object elements.

## <a name="IdentifiedObjectname"></a>11. Property `EnergyConsumerPhase > IdentifiedObject.name`

**Title:** name

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The name is any free human readable and possibly non unique text naming the object.

----------------------------------------------------------------------------------------------------------------------------
Generated using [json-schema-for-humans](https://github.com/coveooss/json-schema-for-humans) on 2024-04-10 at 07:14:23 -0600
