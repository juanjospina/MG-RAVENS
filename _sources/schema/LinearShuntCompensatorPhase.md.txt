# LinearShuntCompensatorPhase

- [1. Property `LinearShuntCompensatorPhase > ShuntCompensatorPhase.maximumSections`](#ShuntCompensatorPhasemaximumSections)
- [2. Property `LinearShuntCompensatorPhase > ShuntCompensatorPhase.normalSections`](#ShuntCompensatorPhasenormalSections)
- [3. Property `LinearShuntCompensatorPhase > ShuntCompensatorPhase.phase`](#ShuntCompensatorPhasephase)
- [4. Property `LinearShuntCompensatorPhase > ShuntCompensatorPhase.sections`](#ShuntCompensatorPhasesections)
- [5. Property `LinearShuntCompensatorPhase > LinearShuntCompensatorPhase.gPerSection`](#LinearShuntCompensatorPhasegPerSection)
  - [5.1. Property `LinearShuntCompensatorPhase > LinearShuntCompensatorPhase.gPerSection > multiplier`](#LinearShuntCompensatorPhasegPerSection_multiplier)
  - [5.2. Property `LinearShuntCompensatorPhase > LinearShuntCompensatorPhase.gPerSection > unit`](#LinearShuntCompensatorPhasegPerSection_unit)
  - [5.3. Property `LinearShuntCompensatorPhase > LinearShuntCompensatorPhase.gPerSection > value`](#LinearShuntCompensatorPhasegPerSection_value)
- [6. Property `LinearShuntCompensatorPhase > LinearShuntCompensatorPhase.bPerSection`](#LinearShuntCompensatorPhasebPerSection)
  - [6.1. Property `LinearShuntCompensatorPhase > LinearShuntCompensatorPhase.bPerSection > multiplier`](#LinearShuntCompensatorPhasebPerSection_multiplier)
  - [6.2. Property `LinearShuntCompensatorPhase > LinearShuntCompensatorPhase.bPerSection > unit`](#LinearShuntCompensatorPhasebPerSection_unit)
  - [6.3. Property `LinearShuntCompensatorPhase > LinearShuntCompensatorPhase.bPerSection > value`](#LinearShuntCompensatorPhasebPerSection_value)
- [7. Property `LinearShuntCompensatorPhase > IdentifiedObject.description`](#IdentifiedObjectdescription)
- [8. Property `LinearShuntCompensatorPhase > IdentifiedObject.aliasName`](#IdentifiedObjectaliasName)
- [9. Property `LinearShuntCompensatorPhase > IdentifiedObject.mRID`](#IdentifiedObjectmRID)
- [10. Property `LinearShuntCompensatorPhase > IdentifiedObject.name`](#IdentifiedObjectname)

**Title:** LinearShuntCompensatorPhase

|                           |                                                                           |
| ------------------------- | ------------------------------------------------------------------------- |
| **Type**                  | `object`                                                                  |
| **Required**              | No                                                                        |
| **Additional properties** | [[Any type: allowed]](# "Additional Properties of any type are allowed.") |

**Description:** A per phase linear shunt compensator has banks or sections with equal admittance values.

| Property                                                                              | Pattern | Type             | Deprecated | Definition                | Title/Description |
| ------------------------------------------------------------------------------------- | ------- | ---------------- | ---------- | ------------------------- | ----------------- |
| - [ShuntCompensatorPhase.maximumSections](#ShuntCompensatorPhasemaximumSections )     | No      | integer          | No         | -                         | maximumSections   |
| - [ShuntCompensatorPhase.normalSections](#ShuntCompensatorPhasenormalSections )       | No      | integer          | No         | -                         | normalSections    |
| - [ShuntCompensatorPhase.phase](#ShuntCompensatorPhasephase )                         | No      | enum (of string) | No         | In ./SinglePhaseKind.json | phase             |
| - [ShuntCompensatorPhase.sections](#ShuntCompensatorPhasesections )                   | No      | number           | No         | -                         | sections          |
| - [LinearShuntCompensatorPhase.gPerSection](#LinearShuntCompensatorPhasegPerSection ) | No      | object or number | No         | In ./Conductance.json     | gPerSection       |
| - [LinearShuntCompensatorPhase.bPerSection](#LinearShuntCompensatorPhasebPerSection ) | No      | object or number | No         | In ./Susceptance.json     | bPerSection       |
| - [IdentifiedObject.description](#IdentifiedObjectdescription )                       | No      | string           | No         | -                         | description       |
| - [IdentifiedObject.aliasName](#IdentifiedObjectaliasName )                           | No      | string           | No         | -                         | aliasName         |
| - [IdentifiedObject.mRID](#IdentifiedObjectmRID )                                     | No      | string           | No         | -                         | mRID              |
| - [IdentifiedObject.name](#IdentifiedObjectname )                                     | No      | string           | No         | -                         | name              |

## <a name="ShuntCompensatorPhasemaximumSections"></a>1. Property `LinearShuntCompensatorPhase > ShuntCompensatorPhase.maximumSections`

**Title:** maximumSections

|              |           |
| ------------ | --------- |
| **Type**     | `integer` |
| **Required** | No        |

**Description:** The maximum number of sections that may be switched in for this phase.

## <a name="ShuntCompensatorPhasenormalSections"></a>2. Property `LinearShuntCompensatorPhase > ShuntCompensatorPhase.normalSections`

**Title:** normalSections

|              |           |
| ------------ | --------- |
| **Type**     | `integer` |
| **Required** | No        |

**Description:** For the capacitor phase, the normal number of sections switched in. The value shall be between zero and ShuntCompensatorPhase.maximumSections.

## <a name="ShuntCompensatorPhasephase"></a>3. Property `LinearShuntCompensatorPhase > ShuntCompensatorPhase.phase`

**Title:** phase

|                |                        |
| -------------- | ---------------------- |
| **Type**       | `enum (of string)`     |
| **Required**   | No                     |
| **Defined in** | ./SinglePhaseKind.json |

**Description:** Phase of this shunt compensator component.   If the shunt compensator is wye connected, the connection is from the indicated phase to the central ground or neutral point.  If the shunt compensator is delta connected, the phase indicates a shunt compensator connected from the indicated phase to the next logical non-neutral phase.

Must be one of:
* "A"
* "B"
* "C"
* "N"
* "s1"
* "s2"

## <a name="ShuntCompensatorPhasesections"></a>4. Property `LinearShuntCompensatorPhase > ShuntCompensatorPhase.sections`

**Title:** sections

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |

**Description:** Shunt compensator sections in use. Starting value for steady state solution. The attribute shall be a positive value or zero. Non integer values are allowed to support continuous variables. The reasons for continuous value are to support study cases where no discrete shunt compensators has yet been designed, a solutions where a narrow voltage band force the sections to oscillate or accommodate for a continuous solution as input.
For LinearShuntConpensator the value shall be between zero and ShuntCompensatorPhase.maximumSections. At value zero the shunt compensator conductance and admittance is zero. Linear interpolation of conductance and admittance between the previous and next integer section is applied in case of non-integer values.
For NonlinearShuntCompensator-s shall only be set to one of the NonlinearShuntCompenstorPhasePoint.sectionNumber. There is no interpolation between NonlinearShuntCompenstorPhasePoint-s.

## <a name="LinearShuntCompensatorPhasegPerSection"></a>5. Property `LinearShuntCompensatorPhase > LinearShuntCompensatorPhase.gPerSection`

**Title:** gPerSection

|                |                    |
| -------------- | ------------------ |
| **Type**       | `object or number` |
| **Required**   | No                 |
| **Defined in** | ./Conductance.json |

**Description:** Conductance per section for this phase if shunt compensator is wye connected.  Conductance per section phase to phase if shunt compensator is delta connected.

| Property                                                            | Pattern | Type             | Deprecated | Definition               | Title/Description |
| ------------------------------------------------------------------- | ------- | ---------------- | ---------- | ------------------------ | ----------------- |
| - [multiplier](#LinearShuntCompensatorPhasegPerSection_multiplier ) | No      | enum (of string) | No         | In ./UnitMultiplier.json | nan               |
| - [unit](#LinearShuntCompensatorPhasegPerSection_unit )             | No      | enum (of string) | No         | In ./UnitSymbol.json     | nan               |
| - [value](#LinearShuntCompensatorPhasegPerSection_value )           | No      | number           | No         | -                        | nan               |

### <a name="LinearShuntCompensatorPhasegPerSection_multiplier"></a>5.1. Property `LinearShuntCompensatorPhase > LinearShuntCompensatorPhase.gPerSection > multiplier`

|                |                       |
| -------------- | --------------------- |
| **Type**       | `enum (of string)`    |
| **Required**   | No                    |
| **Default**    | `"none"`              |
| **Defined in** | ./UnitMultiplier.json |

**Description:** nan

Must be one of:
* "p"
* "n"
* "micro"
* "m"
* "c"
* "d"
* "k"
* "M"
* "G"
* "T"
* "none"
* "y"
* "z"
* "a"
* "f"
* "da"
* "h"
* "P"
* "E"
* "Z"
* "Y"

### <a name="LinearShuntCompensatorPhasegPerSection_unit"></a>5.2. Property `LinearShuntCompensatorPhase > LinearShuntCompensatorPhase.gPerSection > unit`

|                |                    |
| -------------- | ------------------ |
| **Type**       | `enum (of string)` |
| **Required**   | No                 |
| **Default**    | `"S"`              |
| **Defined in** | ./UnitSymbol.json  |

**Description:** nan

Must be one of:
* "none"
* "m"
* "kg"
* "s"
* "A"
* "K"
* "mol"
* "cd"
* "deg"
* "rad"
* "sr"
* "Gy"
* "Bq"
* "degC"
* "Sv"
* "F"
* "C"
* "S"
* "H"
* "V"
* "ohm"
* "J"
* "N"
* "Hz"
* "lx"
* "lm"
* "Wb"
* "T"
* "W"
* "Pa"
* "m2"
* "m3"
* "mPers"
* "mPers2"
* "m3Pers"
* "mPerm3"
* "kgm"
* "kgPerm3"
* "WPermK"
* "JPerK"
* "ppm"
* "rotPers"
* "radPers"
* "VA"
* "VAr"
* "cosPhi"
* "Vs"
* "V2"
* "As"
* "A2"
* "A2s"
* "VAh"
* "Wh"
* "VArh"
* "VPerHz"
* "HzPers"
* "character"
* "charPers"
* "kgm2"
* "dB"
* "WPers"
* "lPers"
* "dBm"
* "h"
* "min"
* "Q"
* "Qh"
* "ohmm"
* "APerm"
* "V2h"
* "A2h"
* "Ah"
* "count"
* "ft3"
* "m3Perh"
* "gal"
* "Btu"
* "l"
* "lPerh"
* "lPerl"
* "gPerg"
* "molPerm3"
* "molPermol"
* "molPerkg"
* "sPers"
* "HzPerHz"
* "VPerV"
* "APerA"
* "VPerVA"
* "rev"
* "kat"
* "JPerkg"
* "m3Uncompensated"
* "m3Compensated"
* "WPerW"
* "therm"
* "onePerm"
* "m3Perkg"
* "Pas"
* "Nm"
* "NPerm"
* "radPers2"
* "WPerm2"
* "JPerkgK"
* "JPerm3"
* "VPerm"
* "CPerm3"
* "CPerm2"
* "FPerm"
* "HPerm"
* "JPermol"
* "JPermolK"
* "CPerkg"
* "GyPers"
* "WPersr"
* "WPerm2sr"
* "katPerm3"
* "d"
* "anglemin"
* "anglesec"
* "ha"
* "tonne"
* "bar"
* "mmHg"
* "M"
* "kn"
* "Vh"
* "Mx"
* "G"
* "Oe"
* "WPerA"
* "SPerm"
* "onePerHz"
* "VPerVAr"
* "ohmPerm"
* "kgPerJ"
* "JPers"
* "m2Pers"
* "JPerm2"
* "KPers"
* "PaPers"

### <a name="LinearShuntCompensatorPhasegPerSection_value"></a>5.3. Property `LinearShuntCompensatorPhase > LinearShuntCompensatorPhase.gPerSection > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="LinearShuntCompensatorPhasebPerSection"></a>6. Property `LinearShuntCompensatorPhase > LinearShuntCompensatorPhase.bPerSection`

**Title:** bPerSection

|                |                    |
| -------------- | ------------------ |
| **Type**       | `object or number` |
| **Required**   | No                 |
| **Defined in** | ./Susceptance.json |

**Description:** Susceptance per section of the phase if shunt compensator is wye connected.   Susceptance per section phase to phase if shunt compensator is delta connected.

| Property                                                            | Pattern | Type             | Deprecated | Definition                                                                | Title/Description |
| ------------------------------------------------------------------- | ------- | ---------------- | ---------- | ------------------------------------------------------------------------- | ----------------- |
| - [multiplier](#LinearShuntCompensatorPhasebPerSection_multiplier ) | No      | enum (of string) | No         | Same as [multiplier](#LinearShuntCompensatorPhasegPerSection_multiplier ) | nan               |
| - [unit](#LinearShuntCompensatorPhasebPerSection_unit )             | No      | enum (of string) | No         | Same as [unit](#LinearShuntCompensatorPhasegPerSection_unit )             | nan               |
| - [value](#LinearShuntCompensatorPhasebPerSection_value )           | No      | number           | No         | -                                                                         | nan               |

### <a name="LinearShuntCompensatorPhasebPerSection_multiplier"></a>6.1. Property `LinearShuntCompensatorPhase > LinearShuntCompensatorPhase.bPerSection > multiplier`

|                        |                                                                  |
| ---------------------- | ---------------------------------------------------------------- |
| **Type**               | `enum (of string)`                                               |
| **Required**           | No                                                               |
| **Default**            | `"none"`                                                         |
| **Same definition as** | [multiplier](#LinearShuntCompensatorPhasegPerSection_multiplier) |

**Description:** nan

### <a name="LinearShuntCompensatorPhasebPerSection_unit"></a>6.2. Property `LinearShuntCompensatorPhase > LinearShuntCompensatorPhase.bPerSection > unit`

|                        |                                                      |
| ---------------------- | ---------------------------------------------------- |
| **Type**               | `enum (of string)`                                   |
| **Required**           | No                                                   |
| **Default**            | `"S"`                                                |
| **Same definition as** | [unit](#LinearShuntCompensatorPhasegPerSection_unit) |

**Description:** nan

### <a name="LinearShuntCompensatorPhasebPerSection_value"></a>6.3. Property `LinearShuntCompensatorPhase > LinearShuntCompensatorPhase.bPerSection > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="IdentifiedObjectdescription"></a>7. Property `LinearShuntCompensatorPhase > IdentifiedObject.description`

**Title:** description

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The description is a free human readable text describing or naming the object. It may be non unique and may not correlate to a naming hierarchy.

## <a name="IdentifiedObjectaliasName"></a>8. Property `LinearShuntCompensatorPhase > IdentifiedObject.aliasName`

**Title:** aliasName

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The aliasName is free text human readable name of the object alternative to IdentifiedObject.name. It may be non unique and may not correlate to a naming hierarchy.
The attribute aliasName is retained because of backwards compatibility between CIM relases. It is however recommended to replace aliasName with the Name class as aliasName is planned for retirement at a future time.

## <a name="IdentifiedObjectmRID"></a>9. Property `LinearShuntCompensatorPhase > IdentifiedObject.mRID`

**Title:** mRID

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** Master resource identifier issued by a model authority. The mRID is unique within an exchange context. Global uniqueness is easily achieved by using a UUID, as specified in RFC 4122, for the mRID. The use of UUID is strongly recommended.
For CIMXML data files in RDF syntax conforming to IEC 61970-552, the mRID is mapped to rdf:ID or rdf:about attributes that identify CIM object elements.

## <a name="IdentifiedObjectname"></a>10. Property `LinearShuntCompensatorPhase > IdentifiedObject.name`

**Title:** name

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The name is any free human readable and possibly non unique text naming the object.

----------------------------------------------------------------------------------------------------------------------------
Generated using [json-schema-for-humans](https://github.com/coveooss/json-schema-for-humans) on 2024-04-10 at 07:14:26 -0600
