# SwitchPhase

- [1. Property `SwitchPhase > SwitchPhase.normalOpen`](#SwitchPhasenormalOpen)
- [2. Property `SwitchPhase > SwitchPhase.phaseSide1`](#SwitchPhasephaseSide1)
- [3. Property `SwitchPhase > SwitchPhase.phaseSide2`](#SwitchPhasephaseSide2)
- [4. Property `SwitchPhase > SwitchPhase.closed`](#SwitchPhaseclosed)
- [5. Property `SwitchPhase > SwitchPhase.ratedCurrent`](#SwitchPhaseratedCurrent)
  - [5.1. Property `SwitchPhase > SwitchPhase.ratedCurrent > multiplier`](#SwitchPhaseratedCurrent_multiplier)
  - [5.2. Property `SwitchPhase > SwitchPhase.ratedCurrent > unit`](#SwitchPhaseratedCurrent_unit)
  - [5.3. Property `SwitchPhase > SwitchPhase.ratedCurrent > value`](#SwitchPhaseratedCurrent_value)
- [6. Property `SwitchPhase > IdentifiedObject.description`](#IdentifiedObjectdescription)
- [7. Property `SwitchPhase > IdentifiedObject.aliasName`](#IdentifiedObjectaliasName)
- [8. Property `SwitchPhase > IdentifiedObject.mRID`](#IdentifiedObjectmRID)
- [9. Property `SwitchPhase > IdentifiedObject.name`](#IdentifiedObjectname)

**Title:** SwitchPhase

|                           |                                                                           |
| ------------------------- | ------------------------------------------------------------------------- |
| **Type**                  | `object`                                                                  |
| **Required**              | No                                                                        |
| **Additional properties** | [[Any type: allowed]](# "Additional Properties of any type are allowed.") |

**Description:** Single phase of a multi-phase switch when its attributes might be different per phase.

| Property                                                        | Pattern | Type             | Deprecated | Definition                                                | Title/Description |
| --------------------------------------------------------------- | ------- | ---------------- | ---------- | --------------------------------------------------------- | ----------------- |
| - [SwitchPhase.normalOpen](#SwitchPhasenormalOpen )             | No      | boolean          | No         | -                                                         | normalOpen        |
| - [SwitchPhase.phaseSide1](#SwitchPhasephaseSide1 )             | No      | enum (of string) | No         | In ./SinglePhaseKind.json                                 | phaseSide1        |
| - [SwitchPhase.phaseSide2](#SwitchPhasephaseSide2 )             | No      | enum (of string) | No         | Same as [SwitchPhase.phaseSide1](#SwitchPhasephaseSide1 ) | phaseSide2        |
| - [SwitchPhase.closed](#SwitchPhaseclosed )                     | No      | boolean          | No         | -                                                         | closed            |
| - [SwitchPhase.ratedCurrent](#SwitchPhaseratedCurrent )         | No      | object or number | No         | In ./CurrentFlow.json                                     | ratedCurrent      |
| - [IdentifiedObject.description](#IdentifiedObjectdescription ) | No      | string           | No         | -                                                         | description       |
| - [IdentifiedObject.aliasName](#IdentifiedObjectaliasName )     | No      | string           | No         | -                                                         | aliasName         |
| - [IdentifiedObject.mRID](#IdentifiedObjectmRID )               | No      | string           | No         | -                                                         | mRID              |
| - [IdentifiedObject.name](#IdentifiedObjectname )               | No      | string           | No         | -                                                         | name              |

## <a name="SwitchPhasenormalOpen"></a>1. Property `SwitchPhase > SwitchPhase.normalOpen`

**Title:** normalOpen

|              |           |
| ------------ | --------- |
| **Type**     | `boolean` |
| **Required** | No        |

**Description:** Used in cases when no Measurement for the status value is present. If the SwitchPhase has a status measurement the Discrete.normalValue is expected to match with this value.

## <a name="SwitchPhasephaseSide1"></a>2. Property `SwitchPhase > SwitchPhase.phaseSide1`

**Title:** phaseSide1

|                |                        |
| -------------- | ---------------------- |
| **Type**       | `enum (of string)`     |
| **Required**   | No                     |
| **Defined in** | ./SinglePhaseKind.json |

**Description:** Phase of this SwitchPhase on the side with terminal sequence number equal to 1. Should be a phase contained in that terminal’s phases attribute.

Must be one of:
* "A"
* "B"
* "C"
* "N"
* "s1"
* "s2"

## <a name="SwitchPhasephaseSide2"></a>3. Property `SwitchPhase > SwitchPhase.phaseSide2`

**Title:** phaseSide2

|                        |                                                  |
| ---------------------- | ------------------------------------------------ |
| **Type**               | `enum (of string)`                               |
| **Required**           | No                                               |
| **Same definition as** | [SwitchPhase.phaseSide1](#SwitchPhasephaseSide1) |

**Description:** Phase of this SwitchPhase on the side with terminal sequence number equal to 2.  Should be a phase contained in that terminal’s Terminal.phases attribute.

## <a name="SwitchPhaseclosed"></a>4. Property `SwitchPhase > SwitchPhase.closed`

**Title:** closed

|              |           |
| ------------ | --------- |
| **Type**     | `boolean` |
| **Required** | No        |

**Description:** The attribute tells if the switch is considered closed when used as input to topology processing.

## <a name="SwitchPhaseratedCurrent"></a>5. Property `SwitchPhase > SwitchPhase.ratedCurrent`

**Title:** ratedCurrent

|                |                    |
| -------------- | ------------------ |
| **Type**       | `object or number` |
| **Required**   | No                 |
| **Defined in** | ./CurrentFlow.json |

**Description:** The maximum continuous current carrying capacity in amps governed by the device material and construction.
The attribute shall be a positive value.

| Property                                             | Pattern | Type             | Deprecated | Definition               | Title/Description |
| ---------------------------------------------------- | ------- | ---------------- | ---------- | ------------------------ | ----------------- |
| - [multiplier](#SwitchPhaseratedCurrent_multiplier ) | No      | enum (of string) | No         | In ./UnitMultiplier.json | nan               |
| - [unit](#SwitchPhaseratedCurrent_unit )             | No      | enum (of string) | No         | In ./UnitSymbol.json     | nan               |
| - [value](#SwitchPhaseratedCurrent_value )           | No      | number           | No         | -                        | nan               |

### <a name="SwitchPhaseratedCurrent_multiplier"></a>5.1. Property `SwitchPhase > SwitchPhase.ratedCurrent > multiplier`

|                |                       |
| -------------- | --------------------- |
| **Type**       | `enum (of string)`    |
| **Required**   | No                    |
| **Default**    | `"none"`              |
| **Defined in** | ./UnitMultiplier.json |

**Description:** nan

Must be one of:
* "p"
* "n"
* "micro"
* "m"
* "c"
* "d"
* "k"
* "M"
* "G"
* "T"
* "none"
* "y"
* "z"
* "a"
* "f"
* "da"
* "h"
* "P"
* "E"
* "Z"
* "Y"

### <a name="SwitchPhaseratedCurrent_unit"></a>5.2. Property `SwitchPhase > SwitchPhase.ratedCurrent > unit`

|                |                    |
| -------------- | ------------------ |
| **Type**       | `enum (of string)` |
| **Required**   | No                 |
| **Default**    | `"A"`              |
| **Defined in** | ./UnitSymbol.json  |

**Description:** nan

Must be one of:
* "none"
* "m"
* "kg"
* "s"
* "A"
* "K"
* "mol"
* "cd"
* "deg"
* "rad"
* "sr"
* "Gy"
* "Bq"
* "degC"
* "Sv"
* "F"
* "C"
* "S"
* "H"
* "V"
* "ohm"
* "J"
* "N"
* "Hz"
* "lx"
* "lm"
* "Wb"
* "T"
* "W"
* "Pa"
* "m2"
* "m3"
* "mPers"
* "mPers2"
* "m3Pers"
* "mPerm3"
* "kgm"
* "kgPerm3"
* "WPermK"
* "JPerK"
* "ppm"
* "rotPers"
* "radPers"
* "VA"
* "VAr"
* "cosPhi"
* "Vs"
* "V2"
* "As"
* "A2"
* "A2s"
* "VAh"
* "Wh"
* "VArh"
* "VPerHz"
* "HzPers"
* "character"
* "charPers"
* "kgm2"
* "dB"
* "WPers"
* "lPers"
* "dBm"
* "h"
* "min"
* "Q"
* "Qh"
* "ohmm"
* "APerm"
* "V2h"
* "A2h"
* "Ah"
* "count"
* "ft3"
* "m3Perh"
* "gal"
* "Btu"
* "l"
* "lPerh"
* "lPerl"
* "gPerg"
* "molPerm3"
* "molPermol"
* "molPerkg"
* "sPers"
* "HzPerHz"
* "VPerV"
* "APerA"
* "VPerVA"
* "rev"
* "kat"
* "JPerkg"
* "m3Uncompensated"
* "m3Compensated"
* "WPerW"
* "therm"
* "onePerm"
* "m3Perkg"
* "Pas"
* "Nm"
* "NPerm"
* "radPers2"
* "WPerm2"
* "JPerkgK"
* "JPerm3"
* "VPerm"
* "CPerm3"
* "CPerm2"
* "FPerm"
* "HPerm"
* "JPermol"
* "JPermolK"
* "CPerkg"
* "GyPers"
* "WPersr"
* "WPerm2sr"
* "katPerm3"
* "d"
* "anglemin"
* "anglesec"
* "ha"
* "tonne"
* "bar"
* "mmHg"
* "M"
* "kn"
* "Vh"
* "Mx"
* "G"
* "Oe"
* "WPerA"
* "SPerm"
* "onePerHz"
* "VPerVAr"
* "ohmPerm"
* "kgPerJ"
* "JPers"
* "m2Pers"
* "JPerm2"
* "KPers"
* "PaPers"

### <a name="SwitchPhaseratedCurrent_value"></a>5.3. Property `SwitchPhase > SwitchPhase.ratedCurrent > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

## <a name="IdentifiedObjectdescription"></a>6. Property `SwitchPhase > IdentifiedObject.description`

**Title:** description

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The description is a free human readable text describing or naming the object. It may be non unique and may not correlate to a naming hierarchy.

## <a name="IdentifiedObjectaliasName"></a>7. Property `SwitchPhase > IdentifiedObject.aliasName`

**Title:** aliasName

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The aliasName is free text human readable name of the object alternative to IdentifiedObject.name. It may be non unique and may not correlate to a naming hierarchy.
The attribute aliasName is retained because of backwards compatibility between CIM relases. It is however recommended to replace aliasName with the Name class as aliasName is planned for retirement at a future time.

## <a name="IdentifiedObjectmRID"></a>8. Property `SwitchPhase > IdentifiedObject.mRID`

**Title:** mRID

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** Master resource identifier issued by a model authority. The mRID is unique within an exchange context. Global uniqueness is easily achieved by using a UUID, as specified in RFC 4122, for the mRID. The use of UUID is strongly recommended.
For CIMXML data files in RDF syntax conforming to IEC 61970-552, the mRID is mapped to rdf:ID or rdf:about attributes that identify CIM object elements.

## <a name="IdentifiedObjectname"></a>9. Property `SwitchPhase > IdentifiedObject.name`

**Title:** name

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The name is any free human readable and possibly non unique text naming the object.

----------------------------------------------------------------------------------------------------------------------------
Generated using [json-schema-for-humans](https://github.com/coveooss/json-schema-for-humans) on 2024-04-10 at 07:14:21 -0600
