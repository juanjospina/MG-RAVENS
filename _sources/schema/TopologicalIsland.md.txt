# TopologicalIsland

- [1. Property `TopologicalIsland > TopologicalIsland.AngleRefTopologicalNode`](#TopologicalIslandAngleRefTopologicalNode)
- [2. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes`](#TopologicalIslandTopologicalNodes)
  - [2.1. TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode.json](#autogenerated_heading_2)
    - [2.1.1. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > TopologicalNode.pInjection`](#TopologicalIslandTopologicalNodes_items_TopologicalNodepInjection)
      - [2.1.1.1. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > TopologicalNode.pInjection > multiplier`](#TopologicalIslandTopologicalNodes_items_TopologicalNodepInjection_multiplier)
      - [2.1.1.2. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > TopologicalNode.pInjection > unit`](#TopologicalIslandTopologicalNodes_items_TopologicalNodepInjection_unit)
      - [2.1.1.3. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > TopologicalNode.pInjection > value`](#TopologicalIslandTopologicalNodes_items_TopologicalNodepInjection_value)
    - [2.1.2. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > TopologicalNode.qInjection`](#TopologicalIslandTopologicalNodes_items_TopologicalNodeqInjection)
      - [2.1.2.1. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > TopologicalNode.qInjection > multiplier`](#TopologicalIslandTopologicalNodes_items_TopologicalNodeqInjection_multiplier)
      - [2.1.2.2. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > TopologicalNode.qInjection > unit`](#TopologicalIslandTopologicalNodes_items_TopologicalNodeqInjection_unit)
      - [2.1.2.3. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > TopologicalNode.qInjection > value`](#TopologicalIslandTopologicalNodes_items_TopologicalNodeqInjection_value)
    - [2.1.3. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > IdentifiedObject.description`](#TopologicalIslandTopologicalNodes_items_IdentifiedObjectdescription)
    - [2.1.4. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > IdentifiedObject.aliasName`](#TopologicalIslandTopologicalNodes_items_IdentifiedObjectaliasName)
    - [2.1.5. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > IdentifiedObject.mRID`](#TopologicalIslandTopologicalNodes_items_IdentifiedObjectmRID)
    - [2.1.6. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > IdentifiedObject.name`](#TopologicalIslandTopologicalNodes_items_IdentifiedObjectname)
- [3. Property `TopologicalIsland > IdentifiedObject.description`](#IdentifiedObjectdescription)
- [4. Property `TopologicalIsland > IdentifiedObject.aliasName`](#IdentifiedObjectaliasName)
- [5. Property `TopologicalIsland > IdentifiedObject.mRID`](#IdentifiedObjectmRID)
- [6. Property `TopologicalIsland > IdentifiedObject.name`](#IdentifiedObjectname)

**Title:** TopologicalIsland

|                           |                                                                           |
| ------------------------- | ------------------------------------------------------------------------- |
| **Type**                  | `object`                                                                  |
| **Required**              | No                                                                        |
| **Additional properties** | [[Any type: allowed]](# "Additional Properties of any type are allowed.") |

**Description:** An electrically connected subset of the network. Topological islands can change as the current network state changes, e.g. due to: 
- disconnect switches or breakers changing state in a SCADA/EMS.
- manual creation, change or deletion of topological nodes in a planning tool.
Only energised TopologicalNode-s shall be part of the topological island.

| Property                                                                                  | Pattern | Type   | Deprecated | Definition | Title/Description |
| ----------------------------------------------------------------------------------------- | ------- | ------ | ---------- | ---------- | ----------------- |
| - [TopologicalIsland.AngleRefTopologicalNode](#TopologicalIslandAngleRefTopologicalNode ) | No      | string | No         | -          | -                 |
| - [TopologicalIsland.TopologicalNodes](#TopologicalIslandTopologicalNodes )               | No      | array  | No         | -          | TopologicalNode   |
| - [IdentifiedObject.description](#IdentifiedObjectdescription )                           | No      | string | No         | -          | description       |
| - [IdentifiedObject.aliasName](#IdentifiedObjectaliasName )                               | No      | string | No         | -          | aliasName         |
| - [IdentifiedObject.mRID](#IdentifiedObjectmRID )                                         | No      | string | No         | -          | mRID              |
| - [IdentifiedObject.name](#IdentifiedObjectname )                                         | No      | string | No         | -          | name              |

## <a name="TopologicalIslandAngleRefTopologicalNode"></a>1. Property `TopologicalIsland > TopologicalIsland.AngleRefTopologicalNode`

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

## <a name="TopologicalIslandTopologicalNodes"></a>2. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes`

**Title:** TopologicalNode

|              |         |
| ------------ | ------- |
| **Type**     | `array` |
| **Required** | No      |

**Description:** For a detailed substation model a topological node is a set of connectivity nodes that, in the current network state, are connected together through any type of closed switches, including  jumpers. Topological nodes change as the current network state changes (i.e., switches, breakers, etc. change state).
For a planning model, switch statuses are not used to form topological nodes. Instead they are manually created or deleted in a model builder tool. Topological nodes maintained this way are also called "busses".

|                      | Array restrictions |
| -------------------- | ------------------ |
| **Min items**        | N/A                |
| **Max items**        | N/A                |
| **Items unicity**    | False              |
| **Additional items** | False              |
| **Tuple validation** | See below          |

| Each item of this array must be                                  | Description                                                                                                                                                                                                                                                                                                            |
| ---------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| [TopologicalNode.json](#TopologicalIslandTopologicalNodes_items) | For a detailed substation model a topological node is a set of connectivity nodes that, in the current network state, are connected together through any type of closed switches, including  jumpers. Topological nodes change as the current network state changes (i.e., switches, breakers, etc. change state). ... |

### <a name="autogenerated_heading_2"></a>2.1. TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode.json

|                           |                                                                           |
| ------------------------- | ------------------------------------------------------------------------- |
| **Type**                  | `object`                                                                  |
| **Required**              | No                                                                        |
| **Additional properties** | [[Any type: allowed]](# "Additional Properties of any type are allowed.") |
| **Defined in**            | ./TopologicalNode.json                                                    |

**Description:** For a detailed substation model a topological node is a set of connectivity nodes that, in the current network state, are connected together through any type of closed switches, including  jumpers. Topological nodes change as the current network state changes (i.e., switches, breakers, etc. change state).
For a planning model, switch statuses are not used to form topological nodes. Instead they are manually created or deleted in a model builder tool. Topological nodes maintained this way are also called "busses".

| Property                                                                                                | Pattern | Type             | Deprecated | Definition              | Title/Description |
| ------------------------------------------------------------------------------------------------------- | ------- | ---------------- | ---------- | ----------------------- | ----------------- |
| - [TopologicalNode.pInjection](#TopologicalIslandTopologicalNodes_items_TopologicalNodepInjection )     | No      | object or number | No         | In ./ActivePower.json   | pInjection        |
| - [TopologicalNode.qInjection](#TopologicalIslandTopologicalNodes_items_TopologicalNodeqInjection )     | No      | object or number | No         | In ./ReactivePower.json | qInjection        |
| - [IdentifiedObject.description](#TopologicalIslandTopologicalNodes_items_IdentifiedObjectdescription ) | No      | string           | No         | -                       | description       |
| - [IdentifiedObject.aliasName](#TopologicalIslandTopologicalNodes_items_IdentifiedObjectaliasName )     | No      | string           | No         | -                       | aliasName         |
| - [IdentifiedObject.mRID](#TopologicalIslandTopologicalNodes_items_IdentifiedObjectmRID )               | No      | string           | No         | -                       | mRID              |
| - [IdentifiedObject.name](#TopologicalIslandTopologicalNodes_items_IdentifiedObjectname )               | No      | string           | No         | -                       | name              |

#### <a name="TopologicalIslandTopologicalNodes_items_TopologicalNodepInjection"></a>2.1.1. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > TopologicalNode.pInjection`

**Title:** pInjection

|                |                    |
| -------------- | ------------------ |
| **Type**       | `object or number` |
| **Required**   | No                 |
| **Defined in** | ./ActivePower.json |

**Description:** The active power injected into the bus at this location in addition to injections from equipment.  Positive sign means injection into the TopologicalNode (bus).
Starting value for a steady state solution.

| Property                                                                                       | Pattern | Type             | Deprecated | Definition               | Title/Description |
| ---------------------------------------------------------------------------------------------- | ------- | ---------------- | ---------- | ------------------------ | ----------------- |
| - [multiplier](#TopologicalIslandTopologicalNodes_items_TopologicalNodepInjection_multiplier ) | No      | enum (of string) | No         | In ./UnitMultiplier.json | nan               |
| - [unit](#TopologicalIslandTopologicalNodes_items_TopologicalNodepInjection_unit )             | No      | enum (of string) | No         | In ./UnitSymbol.json     | nan               |
| - [value](#TopologicalIslandTopologicalNodes_items_TopologicalNodepInjection_value )           | No      | number           | No         | -                        | nan               |

##### <a name="TopologicalIslandTopologicalNodes_items_TopologicalNodepInjection_multiplier"></a>2.1.1.1. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > TopologicalNode.pInjection > multiplier`

|                |                       |
| -------------- | --------------------- |
| **Type**       | `enum (of string)`    |
| **Required**   | No                    |
| **Default**    | `"none"`              |
| **Defined in** | ./UnitMultiplier.json |

**Description:** nan

Must be one of:
* "p"
* "n"
* "micro"
* "m"
* "c"
* "d"
* "k"
* "M"
* "G"
* "T"
* "none"
* "y"
* "z"
* "a"
* "f"
* "da"
* "h"
* "P"
* "E"
* "Z"
* "Y"

##### <a name="TopologicalIslandTopologicalNodes_items_TopologicalNodepInjection_unit"></a>2.1.1.2. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > TopologicalNode.pInjection > unit`

|                |                    |
| -------------- | ------------------ |
| **Type**       | `enum (of string)` |
| **Required**   | No                 |
| **Default**    | `"W"`              |
| **Defined in** | ./UnitSymbol.json  |

**Description:** nan

Must be one of:
* "none"
* "m"
* "kg"
* "s"
* "A"
* "K"
* "mol"
* "cd"
* "deg"
* "rad"
* "sr"
* "Gy"
* "Bq"
* "degC"
* "Sv"
* "F"
* "C"
* "S"
* "H"
* "V"
* "ohm"
* "J"
* "N"
* "Hz"
* "lx"
* "lm"
* "Wb"
* "T"
* "W"
* "Pa"
* "m2"
* "m3"
* "mPers"
* "mPers2"
* "m3Pers"
* "mPerm3"
* "kgm"
* "kgPerm3"
* "WPermK"
* "JPerK"
* "ppm"
* "rotPers"
* "radPers"
* "VA"
* "VAr"
* "cosPhi"
* "Vs"
* "V2"
* "As"
* "A2"
* "A2s"
* "VAh"
* "Wh"
* "VArh"
* "VPerHz"
* "HzPers"
* "character"
* "charPers"
* "kgm2"
* "dB"
* "WPers"
* "lPers"
* "dBm"
* "h"
* "min"
* "Q"
* "Qh"
* "ohmm"
* "APerm"
* "V2h"
* "A2h"
* "Ah"
* "count"
* "ft3"
* "m3Perh"
* "gal"
* "Btu"
* "l"
* "lPerh"
* "lPerl"
* "gPerg"
* "molPerm3"
* "molPermol"
* "molPerkg"
* "sPers"
* "HzPerHz"
* "VPerV"
* "APerA"
* "VPerVA"
* "rev"
* "kat"
* "JPerkg"
* "m3Uncompensated"
* "m3Compensated"
* "WPerW"
* "therm"
* "onePerm"
* "m3Perkg"
* "Pas"
* "Nm"
* "NPerm"
* "radPers2"
* "WPerm2"
* "JPerkgK"
* "JPerm3"
* "VPerm"
* "CPerm3"
* "CPerm2"
* "FPerm"
* "HPerm"
* "JPermol"
* "JPermolK"
* "CPerkg"
* "GyPers"
* "WPersr"
* "WPerm2sr"
* "katPerm3"
* "d"
* "anglemin"
* "anglesec"
* "ha"
* "tonne"
* "bar"
* "mmHg"
* "M"
* "kn"
* "Vh"
* "Mx"
* "G"
* "Oe"
* "WPerA"
* "SPerm"
* "onePerHz"
* "VPerVAr"
* "ohmPerm"
* "kgPerJ"
* "JPers"
* "m2Pers"
* "JPerm2"
* "KPers"
* "PaPers"

##### <a name="TopologicalIslandTopologicalNodes_items_TopologicalNodepInjection_value"></a>2.1.1.3. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > TopologicalNode.pInjection > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

#### <a name="TopologicalIslandTopologicalNodes_items_TopologicalNodeqInjection"></a>2.1.2. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > TopologicalNode.qInjection`

**Title:** qInjection

|                |                      |
| -------------- | -------------------- |
| **Type**       | `object or number`   |
| **Required**   | No                   |
| **Defined in** | ./ReactivePower.json |

**Description:** The reactive power injected into the bus at this location in addition to injections from equipment. Positive sign means injection into the TopologicalNode (bus).
Starting value for a steady state solution.

| Property                                                                                       | Pattern | Type             | Deprecated | Definition                                                                                           | Title/Description |
| ---------------------------------------------------------------------------------------------- | ------- | ---------------- | ---------- | ---------------------------------------------------------------------------------------------------- | ----------------- |
| - [multiplier](#TopologicalIslandTopologicalNodes_items_TopologicalNodeqInjection_multiplier ) | No      | enum (of string) | No         | Same as [multiplier](#TopologicalIslandTopologicalNodes_items_TopologicalNodepInjection_multiplier ) | nan               |
| - [unit](#TopologicalIslandTopologicalNodes_items_TopologicalNodeqInjection_unit )             | No      | enum (of string) | No         | Same as [unit](#TopologicalIslandTopologicalNodes_items_TopologicalNodepInjection_unit )             | nan               |
| - [value](#TopologicalIslandTopologicalNodes_items_TopologicalNodeqInjection_value )           | No      | number           | No         | -                                                                                                    | nan               |

##### <a name="TopologicalIslandTopologicalNodes_items_TopologicalNodeqInjection_multiplier"></a>2.1.2.1. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > TopologicalNode.qInjection > multiplier`

|                        |                                                                                             |
| ---------------------- | ------------------------------------------------------------------------------------------- |
| **Type**               | `enum (of string)`                                                                          |
| **Required**           | No                                                                                          |
| **Default**            | `"none"`                                                                                    |
| **Same definition as** | [multiplier](#TopologicalIslandTopologicalNodes_items_TopologicalNodepInjection_multiplier) |

**Description:** nan

##### <a name="TopologicalIslandTopologicalNodes_items_TopologicalNodeqInjection_unit"></a>2.1.2.2. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > TopologicalNode.qInjection > unit`

|                        |                                                                                 |
| ---------------------- | ------------------------------------------------------------------------------- |
| **Type**               | `enum (of string)`                                                              |
| **Required**           | No                                                                              |
| **Default**            | `"VAr"`                                                                         |
| **Same definition as** | [unit](#TopologicalIslandTopologicalNodes_items_TopologicalNodepInjection_unit) |

**Description:** nan

##### <a name="TopologicalIslandTopologicalNodes_items_TopologicalNodeqInjection_value"></a>2.1.2.3. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > TopologicalNode.qInjection > value`

|              |          |
| ------------ | -------- |
| **Type**     | `number` |
| **Required** | No       |
| **Default**  | `null`   |

**Description:** nan

#### <a name="TopologicalIslandTopologicalNodes_items_IdentifiedObjectdescription"></a>2.1.3. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > IdentifiedObject.description`

**Title:** description

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The description is a free human readable text describing or naming the object. It may be non unique and may not correlate to a naming hierarchy.

#### <a name="TopologicalIslandTopologicalNodes_items_IdentifiedObjectaliasName"></a>2.1.4. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > IdentifiedObject.aliasName`

**Title:** aliasName

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The aliasName is free text human readable name of the object alternative to IdentifiedObject.name. It may be non unique and may not correlate to a naming hierarchy.
The attribute aliasName is retained because of backwards compatibility between CIM relases. It is however recommended to replace aliasName with the Name class as aliasName is planned for retirement at a future time.

#### <a name="TopologicalIslandTopologicalNodes_items_IdentifiedObjectmRID"></a>2.1.5. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > IdentifiedObject.mRID`

**Title:** mRID

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** Master resource identifier issued by a model authority. The mRID is unique within an exchange context. Global uniqueness is easily achieved by using a UUID, as specified in RFC 4122, for the mRID. The use of UUID is strongly recommended.
For CIMXML data files in RDF syntax conforming to IEC 61970-552, the mRID is mapped to rdf:ID or rdf:about attributes that identify CIM object elements.

#### <a name="TopologicalIslandTopologicalNodes_items_IdentifiedObjectname"></a>2.1.6. Property `TopologicalIsland > TopologicalIsland.TopologicalNodes > TopologicalNode > IdentifiedObject.name`

**Title:** name

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The name is any free human readable and possibly non unique text naming the object.

## <a name="IdentifiedObjectdescription"></a>3. Property `TopologicalIsland > IdentifiedObject.description`

**Title:** description

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The description is a free human readable text describing or naming the object. It may be non unique and may not correlate to a naming hierarchy.

## <a name="IdentifiedObjectaliasName"></a>4. Property `TopologicalIsland > IdentifiedObject.aliasName`

**Title:** aliasName

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The aliasName is free text human readable name of the object alternative to IdentifiedObject.name. It may be non unique and may not correlate to a naming hierarchy.
The attribute aliasName is retained because of backwards compatibility between CIM relases. It is however recommended to replace aliasName with the Name class as aliasName is planned for retirement at a future time.

## <a name="IdentifiedObjectmRID"></a>5. Property `TopologicalIsland > IdentifiedObject.mRID`

**Title:** mRID

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** Master resource identifier issued by a model authority. The mRID is unique within an exchange context. Global uniqueness is easily achieved by using a UUID, as specified in RFC 4122, for the mRID. The use of UUID is strongly recommended.
For CIMXML data files in RDF syntax conforming to IEC 61970-552, the mRID is mapped to rdf:ID or rdf:about attributes that identify CIM object elements.

## <a name="IdentifiedObjectname"></a>6. Property `TopologicalIsland > IdentifiedObject.name`

**Title:** name

|              |          |
| ------------ | -------- |
| **Type**     | `string` |
| **Required** | No       |

**Description:** The name is any free human readable and possibly non unique text naming the object.

----------------------------------------------------------------------------------------------------------------------------
Generated using [json-schema-for-humans](https://github.com/coveooss/json-schema-for-humans) on 2024-04-10 at 07:14:26 -0600
